{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { CartContext } from 'contexts/cart/cart.context';\nimport Image from 'components/Image/Image';\nimport Button from '../Button/Button';\nimport InputIncDec from '../InputIncDec/InputIncDec';\nimport { CartIcon } from '../AllSvgIcon';\nimport { ProductCardWrapper, ProductImageWrapper, ProductInfo, DiscountPercent } from './ProductCard.style';\nimport { getProductQuantity, findProductIndex } from '../helpers/utility';\n\nvar ProductCard = function ProductCard(_ref) {\n  var title = _ref.title,\n      image = _ref.image,\n      weight = _ref.weight,\n      price = _ref.price,\n      salePrice = _ref.salePrice,\n      discountInPercent = _ref.discountInPercent,\n      cartProducts = _ref.cartProducts,\n      addToCart = _ref.addToCart,\n      updateCart = _ref.updateCart,\n      value = _ref.value,\n      currency = _ref.currency,\n      onChange = _ref.onChange,\n      increment = _ref.increment,\n      decrement = _ref.decrement,\n      data = _ref.data,\n      deviceType = _ref.deviceType,\n      onClick = _ref.onClick,\n      props = _objectWithoutProperties(_ref, [\"title\", \"image\", \"weight\", \"price\", \"salePrice\", \"discountInPercent\", \"cartProducts\", \"addToCart\", \"updateCart\", \"value\", \"currency\", \"onChange\", \"increment\", \"decrement\", \"data\", \"deviceType\", \"onClick\"]);\n\n  var _React$useContext = React.useContext(CartContext),\n      add = _React$useContext.add,\n      update = _React$useContext.update,\n      products = _React$useContext.products;\n\n  var index = data && data.id ? findProductIndex(products, data.id) : -1;\n  var quantity = getProductQuantity(products, index);\n\n  var handleClick = function handleClick(e) {\n    e.stopPropagation();\n    add(e, data);\n  };\n\n  var handleUpdate = function handleUpdate(value, e) {\n    if (index === -1 && value === 1) {\n      add(e, data);\n    } else {\n      update(data.id, value);\n    }\n  };\n\n  return __jsx(ProductCardWrapper, {\n    onClick: onClick,\n    className: \"product-card\"\n  }, __jsx(ProductImageWrapper, null, __jsx(Image, {\n    url: image,\n    className: \"product-image\",\n    style: {\n      position: 'relative'\n    },\n    alt: title\n  }), discountInPercent ? __jsx(React.Fragment, null, __jsx(DiscountPercent, null, discountInPercent, \"%\")) : ''), __jsx(ProductInfo, null, __jsx(\"h3\", {\n    className: \"product-title\"\n  }, title), __jsx(\"span\", {\n    className: \"product-weight\"\n  }, weight), __jsx(\"div\", {\n    className: \"product-meta\"\n  }, __jsx(\"div\", {\n    className: \"productPriceWrapper\"\n  }, discountInPercent ? __jsx(\"span\", {\n    className: \"discountedPrice\"\n  }, currency, price) : '', __jsx(\"span\", {\n    className: \"product-price\"\n  }, currency, salePrice ? salePrice : price)), quantity <= 0 ? __jsx(Button, {\n    title: \"Cart\",\n    intlButtonId: \"addCartButton\",\n    iconPosition: \"left\",\n    colors: \"primary\",\n    size: \"small\",\n    variant: \"outlined\",\n    className: \"cart-button\",\n    icon: __jsx(CartIcon, null),\n    onClick: function onClick(e) {\n      return handleClick(e);\n    }\n  }) : __jsx(InputIncDec, {\n    value: quantity,\n    onClick: function onClick(e) {\n      e.stopPropagation(onclick);\n    },\n    onUpdate: function onUpdate(value, e) {\n      return handleUpdate(value, e);\n    }\n  }))));\n};\n\nexport default ProductCard;","map":null,"metadata":{},"sourceType":"module"}