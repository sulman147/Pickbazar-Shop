{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\React Web Work\\\\pickbazar\\\\packages\\\\shop\\\\components\\\\CategoryDropdown\\\\SpringDropdown.tsx\";\nvar __jsx = React.createElement;\nimport React, { memo } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { useMeasure, usePrevious } from 'helper/hooks';\nimport { DropdownWrapper, Dropdown, Title, Content, IconWrapper } from './CategoryDropdown.style';\nimport CategoryIcon from './CategoryIcon';\n\nvar DropdownSubItem = function DropdownSubItem(_ref) {\n  var title = _ref.title,\n      activeClass = _ref.activeClass,\n      onClick = _ref.onClick;\n  return __jsx(Title, {\n    className: activeClass,\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, title);\n};\n\nvar DropdownItem = memo(function (_ref2) {\n  var activeClass = _ref2.activeClass,\n      title = _ref2.title,\n      onClick = _ref2.onClick,\n      isOpen = _ref2.isOpen,\n      children = _ref2.children,\n      categoryIcon = _ref2.categoryIcon,\n      iconArrays = _ref2.iconArrays;\n  var previous = usePrevious(isOpen);\n\n  var _useMeasure = useMeasure(),\n      _useMeasure2 = _slicedToArray(_useMeasure, 2),\n      bind = _useMeasure2[0],\n      viewHeight = _useMeasure2[1].height;\n\n  var _useSpring = useSpring({\n    from: {\n      height: 0,\n      opacity: 0,\n      transform: 'translate3d(25px,0,0)'\n    },\n    to: {\n      height: isOpen ? viewHeight : 0,\n      opacity: isOpen ? 1 : 0,\n      transform: \"translate3d(\".concat(isOpen ? 0 : 25, \"px,0,0)\")\n    }\n  }),\n      height = _useSpring.height,\n      opacity = _useSpring.opacity,\n      transform = _useSpring.transform;\n\n  return __jsx(Dropdown, {\n    className: isOpen ? 'open' : '',\n    isOpen: isOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(Title, {\n    className: activeClass,\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, categoryIcon ? __jsx(IconWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(CategoryIcon, {\n    name: categoryIcon,\n    iconArray: iconArrays,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })) : null, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, title)), __jsx(Content, {\n    style: {\n      opacity: opacity,\n      height: isOpen && previous === !isOpen ? 'auto' : height\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(animated.div, _extends({\n    style: {\n      transform: transform\n    }\n  }, bind, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), children)));\n});\n\nvar CategoryDropdown = function CategoryDropdown(_ref3) {\n  var className = _ref3.className,\n      _ref3$items = _ref3.items,\n      items = _ref3$items === void 0 ? [] : _ref3$items,\n      handleCategorySelection = _ref3.handleCategorySelection,\n      selectedQueries = _ref3.selectedQueries,\n      iconList = _ref3.iconList;\n  var addAllClasses = ['category-dropdown'];\n\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return __jsx(DropdownWrapper, {\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, items.length !== 0 && items.map(function (dropdown) {\n    return __jsx(DropdownItem, {\n      key: dropdown.slug,\n      title: dropdown.title,\n      iconArrays: iconList,\n      categoryIcon: dropdown.icon,\n      activeClass: selectedQueries && selectedQueries.includes(dropdown.slug) ? 'active' : '',\n      isOpen: selectedQueries && (selectedQueries.includes(dropdown.slug) || dropdown.children.find(function (children) {\n        return selectedQueries.includes(children.slug);\n      })),\n      onClick: function onClick() {\n        handleCategorySelection(dropdown.slug);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, dropdown.children.map(function (item) {\n      return __jsx(DropdownSubItem, {\n        key: item.slug,\n        title: item.title,\n        onClick: function onClick() {\n          handleCategorySelection(item.slug);\n        },\n        activeClass: selectedQueries && selectedQueries.includes(item.slug) ? 'active' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      });\n    }));\n  }));\n};\n\nexport default CategoryDropdown;","map":{"version":3,"sources":["E:/React Web Work/pickbazar/packages/shop/components/CategoryDropdown/SpringDropdown.tsx"],"names":["React","memo","useSpring","animated","useMeasure","usePrevious","DropdownWrapper","Dropdown","Title","Content","IconWrapper","CategoryIcon","DropdownSubItem","title","activeClass","onClick","DropdownItem","isOpen","children","categoryIcon","iconArrays","previous","bind","viewHeight","height","from","opacity","transform","to","CategoryDropdown","className","items","handleCategorySelection","selectedQueries","iconList","addAllClasses","push","length","map","dropdown","slug","icon","includes","find","item"],"mappings":"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","sourcesContent":["import React, { memo } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { useMeasure, usePrevious } from 'helper/hooks';\nimport {\n  DropdownWrapper,\n  Dropdown,\n  Title,\n  Content,\n  IconWrapper,\n} from './CategoryDropdown.style';\nimport CategoryIcon from './CategoryIcon';\n\ntype DropdownProps = {\n  className?: string;\n  items: any[];\n  id?: number;\n  handleCategorySelection?: any;\n  selectedQueries?: any;\n  iconList?: any;\n};\n\ntype DropdownItemProps = {\n  defaultOpen?: boolean;\n  activeClass?: String;\n  title?: String;\n  key?: any;\n  categoryIcon?: any;\n  children?: any;\n  iconArrays?: any;\n  onClick?: any;\n  isOpen: any;\n};\n\ntype DropdownSubItemProps = {\n  title?: string;\n  activeClass?: string;\n  key?: any;\n  onClick?: any;\n};\n\nconst DropdownSubItem: React.FC<DropdownSubItemProps> = ({\n  title,\n  activeClass,\n  onClick,\n}) => {\n  return (\n    <Title className={activeClass} onClick={onClick}>\n      {title}\n    </Title>\n  );\n};\n\nconst DropdownItem: React.FC<DropdownItemProps> = memo(\n  ({\n    activeClass,\n    title,\n    onClick,\n    isOpen,\n    children,\n    categoryIcon,\n    iconArrays,\n  }) => {\n    const previous = usePrevious(isOpen);\n    const [bind, { height: viewHeight }] = useMeasure();\n    const { height, opacity, transform } = useSpring<any>({\n      from: { height: 0, opacity: 0, transform: 'translate3d(25px,0,0)' },\n      to: {\n        height: isOpen ? viewHeight : 0,\n        opacity: isOpen ? 1 : 0,\n        transform: `translate3d(${isOpen ? 0 : 25}px,0,0)`,\n      },\n    });\n\n    return (\n      <Dropdown className={isOpen ? 'open' : ''} isOpen={isOpen}>\n        <Title className={activeClass} onClick={onClick}>\n          {categoryIcon ? (\n            <IconWrapper>\n              <CategoryIcon name={categoryIcon} iconArray={iconArrays} />\n            </IconWrapper>\n          ) : null}\n          <span>{title}</span>\n        </Title>\n\n        <Content\n          style={{\n            opacity,\n            height: isOpen && previous === !isOpen ? 'auto' : height,\n          }}\n        >\n          <animated.div style={{ transform }} {...bind}>\n            {children}\n          </animated.div>\n        </Content>\n      </Dropdown>\n    );\n  }\n);\n\nconst CategoryDropdown: React.FC<DropdownProps> = ({\n  className,\n  items = [],\n  handleCategorySelection,\n  selectedQueries,\n  iconList,\n}) => {\n  const addAllClasses: string[] = ['category-dropdown'];\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return (\n    <DropdownWrapper className={className}>\n      {items.length !== 0 &&\n        items.map(dropdown => {\n          return (\n            <DropdownItem\n              key={dropdown.slug}\n              title={dropdown.title}\n              iconArrays={iconList}\n              categoryIcon={dropdown.icon}\n              activeClass={\n                selectedQueries && selectedQueries.includes(dropdown.slug)\n                  ? 'active'\n                  : ''\n              }\n              isOpen={\n                selectedQueries &&\n                (selectedQueries.includes(dropdown.slug) ||\n                  dropdown.children.find(children =>\n                    selectedQueries.includes(children.slug)\n                  ))\n              }\n              onClick={() => {\n                handleCategorySelection(dropdown.slug);\n              }}\n            >\n              {dropdown.children.map((item: any) => {\n                return (\n                  <DropdownSubItem\n                    key={item.slug}\n                    title={item.title}\n                    onClick={() => {\n                      handleCategorySelection(item.slug);\n                    }}\n                    activeClass={\n                      selectedQueries && selectedQueries.includes(item.slug)\n                        ? 'active'\n                        : ''\n                    }\n                  />\n                );\n              })}\n            </DropdownItem>\n          );\n        })}\n    </DropdownWrapper>\n  );\n};\n\nexport default CategoryDropdown;\n"]},"metadata":{},"sourceType":"module"}