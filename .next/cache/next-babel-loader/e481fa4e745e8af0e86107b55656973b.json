{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nlet iconTypes = {};\n\nconst CategoryIcon = (_ref) => {\n  let {\n    name,\n    iconArray\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"name\", \"iconArray\"]);\n\n  const hasIcon = iconArray ? iconArray.hasOwnProperty(name) : iconTypes.hasOwnProperty(name);\n  let Icon = hasIcon ? iconArray[name] : \"span\";\n  return __jsx(Icon, props);\n};\n\nexport default CategoryIcon;","map":null,"metadata":{},"sourceType":"module"}