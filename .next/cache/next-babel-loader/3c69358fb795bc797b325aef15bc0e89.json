{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"E:\\\\React Web Work\\\\pickbazar\\\\packages\\\\shop\\\\components\\\\GiftCard\\\\GiftCard.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport Image from 'react-image';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { FormattedMessage } from 'react-intl';\nimport { GiftCardWrapper, GiftCardImageWrapper, CardInfo, CardContent, CopyButton, GiftCode, CopySuccess } from './GiftCard.style';\n\nvar GiftCard = function GiftCard(_ref) {\n  var image = _ref.image,\n      weight = _ref.weight,\n      onClick = _ref.onClick,\n      onChange = _ref.onChange,\n      code = _ref.code,\n      props = _objectWithoutProperties(_ref, [\"image\", \"weight\", \"onClick\", \"onChange\", \"code\"]);\n\n  var _useState = useState({\n    value: code,\n    copied: false\n  }),\n      copyText = _useState[0],\n      setCopyText = _useState[1];\n\n  var codeRef = useRef(null);\n  useEffect(function () {\n    if (copyText.copied) {\n      setTimeout(function () {\n        setCopyText(_objectSpread({}, copyText, {\n          copied: false\n        }));\n      }, 3500);\n    }\n  }, [copyText.copied]);\n  return __jsx(GiftCardWrapper, _extends({}, props, {\n    className: \"product-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), __jsx(GiftCardImageWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(Image, {\n    src: image,\n    className: \"gift-image\",\n    alt: \"gift image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), __jsx(CardInfo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(GiftCode, {\n    ref: codeRef,\n    value: copyText.value,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), !copyText.copied ? __jsx(CopyToClipboard, {\n    text: copyText.value,\n    onCopy: function onCopy() {\n      return setCopyText(_objectSpread({}, copyText, {\n        copied: true\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(CopyButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(FormattedMessage, {\n    id: \"intlCopyBtnId\",\n    defaultMessage: \"Copy\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }))) : __jsx(CopySuccess, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(FormattedMessage, {\n    id: \"intlCopySuccessId\",\n    defaultMessage: \"Copied!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })))));\n};\n\nexport default GiftCard;","map":{"version":3,"sources":["E:/React Web Work/pickbazar/packages/shop/components/GiftCard/GiftCard.tsx"],"names":["React","useRef","useState","useEffect","Image","CopyToClipboard","FormattedMessage","GiftCardWrapper","GiftCardImageWrapper","CardInfo","CardContent","CopyButton","GiftCode","CopySuccess","GiftCard","image","weight","onClick","onChange","code","props","value","copied","copyText","setCopyText","codeRef","setTimeout"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,SACEC,eADF,EAEEC,oBAFF,EAGEC,QAHF,EAIEC,WAJF,EAKEC,UALF,EAMEC,QANF,EAOEC,WAPF,QAQO,kBARP;;AAkBA,IAAMC,QAAiC,GAAG,SAApCA,QAAoC,OAOpC;AAAA,MANJC,KAMI,QANJA,KAMI;AAAA,MALJC,MAKI,QALJA,MAKI;AAAA,MAJJC,OAII,QAJJA,OAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,IAEI,QAFJA,IAEI;AAAA,MADDC,KACC;;AAAA,kBAC4BlB,QAAQ,CAAC;AACvCmB,IAAAA,KAAK,EAAEF,IADgC;AAEvCG,IAAAA,MAAM,EAAE;AAF+B,GAAD,CADpC;AAAA,MACGC,QADH;AAAA,MACaC,WADb;;AAKJ,MAAMC,OAAO,GAAGxB,MAAM,CAAC,IAAD,CAAtB;AAEAE,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIoB,QAAQ,CAACD,MAAb,EAAqB;AACnBI,MAAAA,UAAU,CAAC,YAAM;AACfF,QAAAA,WAAW,mBACND,QADM;AAETD,UAAAA,MAAM,EAAE;AAFC,WAAX;AAID,OALS,EAKP,IALO,CAAV;AAMD;AACF,GATQ,EASN,CAACC,QAAQ,CAACD,MAAV,CATM,CAAT;AAWA,SACE,MAAC,eAAD,eAAqBF,KAArB;AAA4B,IAAA,SAAS,EAAC,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,GAAG,EAAEL,KAAZ;AAAmB,IAAA,SAAS,EAAC,YAA7B;AAA0C,IAAA,GAAG,EAAC,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEU,OAAf;AAAwB,IAAA,KAAK,EAAEF,QAAQ,CAACF,KAAxC;AAA+C,IAAA,QAAQ,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGG,CAACE,QAAQ,CAACD,MAAV,GACC,MAAC,eAAD;AACE,IAAA,IAAI,EAAEC,QAAQ,CAACF,KADjB;AAEE,IAAA,MAAM,EAAE;AAAA,aACNG,WAAW,mBACND,QADM;AAETD,QAAAA,MAAM,EAAE;AAFC,SADL;AAAA,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,eAArB;AAAqC,IAAA,cAAc,EAAC,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATF,CADD,GAeC,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AACE,IAAA,EAAE,EAAC,mBADL;AAEE,IAAA,cAAc,EAAC,SAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAlBJ,CADF,CAJF,CADF;AAmCD,CA5DD;;AA8DA,eAAeR,QAAf","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport Image from 'react-image';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { FormattedMessage } from 'react-intl';\nimport {\n  GiftCardWrapper,\n  GiftCardImageWrapper,\n  CardInfo,\n  CardContent,\n  CopyButton,\n  GiftCode,\n  CopySuccess,\n} from './GiftCard.style';\n\ntype GiftCardProps = {\n  image?: any;\n  weight?: string;\n  code?: any;\n  onClick?: (e: any) => void;\n  onChange?: (e: any) => void;\n};\n\nconst GiftCard: React.FC<GiftCardProps> = ({\n  image,\n  weight,\n  onClick,\n  onChange,\n  code,\n  ...props\n}) => {\n  const [copyText, setCopyText] = useState({\n    value: code,\n    copied: false,\n  });\n  const codeRef = useRef(null);\n\n  useEffect(() => {\n    if (copyText.copied) {\n      setTimeout(() => {\n        setCopyText({\n          ...copyText,\n          copied: false,\n        });\n      }, 3500);\n    }\n  }, [copyText.copied]);\n\n  return (\n    <GiftCardWrapper {...props} className='product-card'>\n      <GiftCardImageWrapper>\n        <Image src={image} className='gift-image' alt='gift image' />\n      </GiftCardImageWrapper>\n      <CardInfo>\n        <CardContent>\n          <GiftCode ref={codeRef} value={copyText.value} readOnly />\n\n          {!copyText.copied ? (\n            <CopyToClipboard\n              text={copyText.value}\n              onCopy={() =>\n                setCopyText({\n                  ...copyText,\n                  copied: true,\n                })\n              }\n            >\n              <CopyButton>\n                <FormattedMessage id='intlCopyBtnId' defaultMessage='Copy' />\n              </CopyButton>\n            </CopyToClipboard>\n          ) : (\n            <CopySuccess>\n              <FormattedMessage\n                id='intlCopySuccessId'\n                defaultMessage='Copied!'\n              />\n            </CopySuccess>\n          )}\n        </CardContent>\n      </CardInfo>\n    </GiftCardWrapper>\n  );\n};\n\nexport default GiftCard;\n"]},"metadata":{},"sourceType":"module"}