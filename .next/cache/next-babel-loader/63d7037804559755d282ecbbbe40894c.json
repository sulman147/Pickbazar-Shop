{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport * as Yup from 'yup';\nimport { withFormik, Form } from 'formik';\nimport { closeModal } from '@redq/reuse-modal';\nimport TextField from 'components/TextField/TextField';\nimport Button from 'components/Button/Button';\nimport { useMutation } from '@apollo/react-hooks';\nimport { UPDATE_ADDRESS } from 'graphql/mutation/address';\nimport { FieldWrapper, Heading } from './Update.style';\nimport { ProfileContext } from 'contexts/profile/profile.context'; // Shape of form values\n\n// Wrap our form with the using withFormik HoC\nconst FormEnhancer = withFormik({\n  // Transform outer props into form values\n  mapPropsToValues: props => {\n    return {\n      id: props.item.id || null,\n      name: props.item.name || '',\n      info: props.item.info || ''\n    };\n  },\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required('Title is required!'),\n    info: Yup.string().required('Address is required')\n  }),\n  handleSubmit: values => {\n    console.log(values, 'values'); // do submitting things\n  }\n});\n\nconst UpdateAddress = props => {\n  const {\n    isValid,\n    item,\n    values,\n    touched,\n    errors,\n    dirty,\n    handleChange,\n    handleBlur,\n    handleReset,\n    isSubmitting\n  } = props;\n  const addressValue = {\n    id: values.id,\n    type: 'secondary',\n    name: values.name,\n    info: values.info\n  };\n  const {\n    state,\n    dispatch\n  } = useContext(ProfileContext);\n  const [addressMutation, {\n    data\n  }] = useMutation(UPDATE_ADDRESS);\n\n  const handleSubmit = async () => {\n    if (isValid) {\n      const addressData = await addressMutation({\n        variables: {\n          addressInput: JSON.stringify(addressValue)\n        }\n      });\n      console.log(addressData, 'address data');\n      dispatch({\n        type: 'ADD_OR_UPDATE_ADDRESS',\n        payload: addressValue\n      });\n      closeModal();\n    }\n  };\n\n  return __jsx(Form, null, __jsx(Heading, null, item && item.id ? 'Edit Address' : 'Add New Address'), __jsx(FieldWrapper, null, __jsx(TextField, {\n    id: \"name\",\n    type: \"text\",\n    placeholder: \"Enter Title\",\n    error: touched.name && errors.name,\n    value: values.name,\n    onChange: handleChange,\n    onBlur: handleBlur\n  })), __jsx(FieldWrapper, null, __jsx(TextField, {\n    id: \"info\",\n    as: \"textarea\",\n    placeholder: \"Enter Address\",\n    error: touched.info && errors.info,\n    value: values.info,\n    onChange: handleChange,\n    onBlur: handleBlur\n  })), __jsx(Button, {\n    onClick: handleSubmit,\n    type: \"submit\",\n    title: \"Save Address\",\n    size: \"medium\",\n    fullwidth: true\n  }));\n};\n\nexport default FormEnhancer(UpdateAddress);","map":null,"metadata":{},"sourceType":"module"}