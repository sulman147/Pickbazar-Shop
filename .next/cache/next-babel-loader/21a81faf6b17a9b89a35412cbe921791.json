{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"E:\\\\React Web Work\\\\pickbazar\\\\packages\\\\shop\\\\containers\\\\Cart\\\\CartPopUp.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  .cartPopup{\\n    top: auto !important;\\n    left: auto !important;\\n    bottom: 50px !important;\\n    right: 50px !important;\\n    box-shadow: 0 21px 36px rgba(0, 0, 0, 0.16);\\n    transform-origin: bottom right;\\n\\n    @media (max-width: 767px) {\\n      max-width: none!important;\\n      width: 100% !important;\\n      bottom: 0 !important;\\n      left: 0!important;\\n      background: #fff;\\n      overflow: initial !important;\\n      transform-origin: bottom center;\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport CartItem from './Cart';\nimport CartPopupButton, { BoxedCartButton } from 'components/CartPopup/CartPopupButton';\nimport { CartContext } from 'contexts/cart/cart.context';\nimport { CURRENCY } from 'helper/constant';\nimport { CartSlidePopup } from './CartItemCard.style';\nimport { FormattedMessage } from 'react-intl';\nvar CartPopupStyle = createGlobalStyle(_templateObject());\n\nvar CartPopUp = function CartPopUp(_ref) {\n  var _ref$deviceType = _ref.deviceType,\n      mobile = _ref$deviceType.mobile,\n      tablet = _ref$deviceType.tablet,\n      desktop = _ref$deviceType.desktop;\n\n  var _useContext = useContext(CartContext),\n      cartState = _useContext.cartState,\n      dispatch = _useContext.dispatch,\n      products = _useContext.products,\n      totalPrice = _useContext.totalPrice;\n\n  var handleModal = function handleModal() {\n    openModal({\n      show: true,\n      config: {\n        className: 'cartPopup',\n        width: 'auto',\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        transition: {\n          tension: 360,\n          friction: 40\n        }\n      },\n      closeOnClickOutside: true,\n      component: CartItem,\n      closeComponent: function closeComponent() {\n        return __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        });\n      },\n      componentProps: {\n        onCloseBtnClick: closeModal,\n        scrollbarHeight: 370\n      }\n    });\n  };\n\n  var toggleCart = function toggleCart() {\n    dispatch({\n      type: 'TOGGLE'\n    });\n  };\n\n  var cartSlideclass = cartState.isOpen === true ? 'cartPopupFixed' : '';\n  return __jsx(React.Fragment, null, mobile || tablet ? __jsx(React.Fragment, null, __jsx(CartPopupStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), __jsx(CartPopupButton, {\n    className: \"product-cart\",\n    itemCount: products.length,\n    itemPostfix: products.length > 1 ? __jsx(FormattedMessage, {\n      id: \"cartItems\",\n      defaultMessage: \"items\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }) : __jsx(FormattedMessage, {\n      id: \"cartItem\",\n      defaultMessage: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }),\n    price: totalPrice,\n    pricePrefix: \"$\",\n    onClick: handleModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })) : __jsx(React.Fragment, null, __jsx(CartSlidePopup, {\n    className: cartSlideclass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, cartState.isOpen === true && __jsx(CartItem, {\n    onCloseBtnClick: toggleCart,\n    scrollbarHeight: \"100vh\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), __jsx(BoxedCartButton, {\n    className: \"product-cart\",\n    itemCount: products.length,\n    itemPostfix: products.length > 1 ? __jsx(FormattedMessage, {\n      id: \"cartItems\",\n      defaultMessage: \"items\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }) : __jsx(FormattedMessage, {\n      id: \"cartItem\",\n      defaultMessage: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }),\n    price: totalPrice,\n    pricePrefix: CURRENCY,\n    onClick: toggleCart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })));\n};\n\nexport default CartPopUp;","map":{"version":3,"sources":["E:/React Web Work/pickbazar/packages/shop/containers/Cart/CartPopUp.tsx"],"names":["React","useContext","createGlobalStyle","openModal","closeModal","CartItem","CartPopupButton","BoxedCartButton","CartContext","CURRENCY","CartSlidePopup","FormattedMessage","CartPopupStyle","CartPopUp","deviceType","mobile","tablet","desktop","cartState","dispatch","products","totalPrice","handleModal","show","config","className","width","height","enableResizing","disableDragging","transition","tension","friction","closeOnClickOutside","component","closeComponent","componentProps","onCloseBtnClick","scrollbarHeight","toggleCart","type","cartSlideclass","isOpen","length"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport CartItem from './Cart';\nimport CartPopupButton, {\n  BoxedCartButton,\n} from 'components/CartPopup/CartPopupButton';\nimport { CartContext } from 'contexts/cart/cart.context';\nimport { CURRENCY } from 'helper/constant';\nimport { CartSlidePopup } from './CartItemCard.style';\nimport { FormattedMessage } from 'react-intl';\n\nconst CartPopupStyle = createGlobalStyle`\n  .cartPopup{\n    top: auto !important;\n    left: auto !important;\n    bottom: 50px !important;\n    right: 50px !important;\n    box-shadow: 0 21px 36px rgba(0, 0, 0, 0.16);\n    transform-origin: bottom right;\n\n    @media (max-width: 767px) {\n      max-width: none!important;\n      width: 100% !important;\n      bottom: 0 !important;\n      left: 0!important;\n      background: #fff;\n      overflow: initial !important;\n      transform-origin: bottom center;\n    }\n  }\n`;\n\ntype CartProps = {\n  deviceType: {\n    mobile: boolean;\n    tablet: boolean;\n    desktop: boolean;\n  };\n};\n\nconst CartPopUp: React.FC<CartProps> = ({\n  deviceType: { mobile, tablet, desktop },\n}) => {\n  const { cartState, dispatch, products, totalPrice } = useContext(CartContext);\n\n  const handleModal = () => {\n    openModal({\n      show: true,\n      config: {\n        className: 'cartPopup',\n        width: 'auto',\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        transition: {\n          tension: 360,\n          friction: 40,\n        },\n      },\n      closeOnClickOutside: true,\n      component: CartItem,\n      closeComponent: () => <div />,\n      componentProps: { onCloseBtnClick: closeModal, scrollbarHeight: 370 },\n    });\n  };\n\n  const toggleCart = () => {\n    dispatch({\n      type: 'TOGGLE',\n    });\n  };\n\n  let cartSlideclass = cartState.isOpen === true ? 'cartPopupFixed' : '';\n\n  return (\n    <>\n      {mobile || tablet ? (\n        <>\n          <CartPopupStyle />\n          <CartPopupButton\n            className='product-cart'\n            itemCount={products.length}\n            itemPostfix={\n              products.length > 1 ? (\n                <FormattedMessage id='cartItems' defaultMessage='items' />\n              ) : (\n                <FormattedMessage id='cartItem' defaultMessage='item' />\n              )\n            }\n            price={totalPrice}\n            pricePrefix='$'\n            onClick={handleModal}\n          />\n        </>\n      ) : (\n        <>\n          <CartSlidePopup className={cartSlideclass}>\n            {cartState.isOpen === true && (\n              <CartItem onCloseBtnClick={toggleCart} scrollbarHeight='100vh' />\n            )}\n          </CartSlidePopup>\n\n          <BoxedCartButton\n            className='product-cart'\n            itemCount={products.length}\n            itemPostfix={\n              products.length > 1 ? (\n                <FormattedMessage id='cartItems' defaultMessage='items' />\n              ) : (\n                <FormattedMessage id='cartItem' defaultMessage='item' />\n              )\n            }\n            price={totalPrice}\n            pricePrefix={CURRENCY}\n            onClick={toggleCart}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default CartPopUp;\n"]},"metadata":{},"sourceType":"module"}