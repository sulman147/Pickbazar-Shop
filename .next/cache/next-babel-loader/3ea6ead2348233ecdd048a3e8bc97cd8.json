{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport Image from 'react-image';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { FormattedMessage } from 'react-intl';\nimport { GiftCardWrapper, GiftCardImageWrapper, CardInfo, CardContent, CopyButton, GiftCode, CopySuccess } from './GiftCard.style';\n\nvar GiftCard = function GiftCard(_ref) {\n  var image = _ref.image,\n      weight = _ref.weight,\n      onClick = _ref.onClick,\n      onChange = _ref.onChange,\n      code = _ref.code,\n      props = _objectWithoutProperties(_ref, [\"image\", \"weight\", \"onClick\", \"onChange\", \"code\"]);\n\n  var _useState = useState({\n    value: code,\n    copied: false\n  }),\n      copyText = _useState[0],\n      setCopyText = _useState[1];\n\n  var codeRef = useRef(null);\n  useEffect(function () {\n    if (copyText.copied) {\n      setTimeout(function () {\n        setCopyText(_objectSpread({}, copyText, {\n          copied: false\n        }));\n      }, 3500);\n    }\n  }, [copyText.copied]);\n  return __jsx(GiftCardWrapper, _extends({}, props, {\n    className: \"product-card\"\n  }), __jsx(GiftCardImageWrapper, null, __jsx(Image, {\n    src: image,\n    className: \"gift-image\",\n    alt: \"gift image\"\n  })), __jsx(CardInfo, null, __jsx(CardContent, null, __jsx(GiftCode, {\n    ref: codeRef,\n    value: copyText.value,\n    readOnly: true\n  }), !copyText.copied ? __jsx(CopyToClipboard, {\n    text: copyText.value,\n    onCopy: function onCopy() {\n      return setCopyText(_objectSpread({}, copyText, {\n        copied: true\n      }));\n    }\n  }, __jsx(CopyButton, null, __jsx(FormattedMessage, {\n    id: \"intlCopyBtnId\",\n    defaultMessage: \"Copy\"\n  }))) : __jsx(CopySuccess, null, __jsx(FormattedMessage, {\n    id: \"intlCopySuccessId\",\n    defaultMessage: \"Copied!\"\n  })))));\n};\n\nexport default GiftCard;","map":null,"metadata":{},"sourceType":"module"}