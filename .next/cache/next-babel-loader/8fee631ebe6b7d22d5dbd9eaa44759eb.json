{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Web Work\\\\pickbazar\\\\packages\\\\shop\\\\components\\\\Carousel\\\\Carousel.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useContext } from 'react';\nimport Carousel from 'react-multi-carousel';\nimport styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport LanguageContext from 'contexts/language/language.context';\nimport { ArrowNext, ArrowPrev } from '../AllSvgIcon';\nconst ButtonPrev = styled('button').withConfig({\n  displayName: \"Carousel__ButtonPrev\",\n  componentId: \"sc-109i4p7-0\"\n})([\"height:40px;width:40px;display:flex;align-items:center;justify-content:center;background-color:#ffffff;color:\", \";padding:0;border-radius:20px;box-shadow:0 3px 6px rgba(0,0,0,0.16);border:0;outline:0;cursor:pointer;position:absolute;top:50%;left:40px;margin-top:-20px;z-index:99;\"], themeGet('colors.primary', '#009E7F'));\nconst ButtonNext = styled('button').withConfig({\n  displayName: \"Carousel__ButtonNext\",\n  componentId: \"sc-109i4p7-1\"\n})([\"height:40px;width:40px;display:flex;align-items:center;justify-content:center;background-color:#ffffff;color:\", \";padding:0;border-radius:20px;box-shadow:0 3px 6px rgba(0,0,0,0.16);border:0;outline:0;cursor:pointer;position:absolute;top:50%;right:40px;margin-top:-20px;z-index:99;\"], themeGet('colors.primary', '#009E7F'));\nconst ButtonGroupWrapper = styled('div').withConfig({\n  displayName: \"Carousel__ButtonGroupWrapper\",\n  componentId: \"sc-109i4p7-2\"\n})([\"\"]);\n\nconst PrevButton = ({\n  onClick,\n  children\n}) => {\n  return __jsx(ButtonPrev, {\n    onClick: e => {\n      e.preventDefault();\n      onClick();\n    },\n    className: \"prevButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, children);\n};\n\nconst NextButton = ({\n  onClick,\n  children\n}) => {\n  return __jsx(ButtonNext, {\n    onClick: e => {\n      e.preventDefault();\n      onClick();\n    },\n    className: \"nextButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, children);\n};\n\nconst ButtonGroup = ({\n  next,\n  previous,\n  isRtl = false\n}) => {\n  const {\n    state: {\n      lang\n    }\n  } = useContext(LanguageContext);\n  return __jsx(ButtonGroupWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, isRtl = (lang === 'ar' || lang === 'he' ? true : false) ? __jsx(React.Fragment, null, __jsx(NextButton, {\n    onClick: () => next(),\n    className: \"rtl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(ArrowPrev, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), __jsx(PrevButton, {\n    onClick: () => previous(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(ArrowNext, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }))) : __jsx(React.Fragment, null, __jsx(PrevButton, {\n    onClick: () => previous(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __jsx(ArrowPrev, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })), __jsx(NextButton, {\n    onClick: () => next(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, __jsx(ArrowNext, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }))));\n};\n\nconst responsive = {\n  desktop: {\n    breakpoint: {\n      max: 3000,\n      min: 1024\n    },\n    items: 3\n  },\n  tablet: {\n    breakpoint: {\n      max: 1024,\n      min: 464\n    },\n    items: 2\n  },\n  mobile: {\n    breakpoint: {\n      max: 464,\n      min: 0\n    },\n    items: 1\n  }\n};\nexport default function CustomCarousel(_ref) {\n  let {\n    data,\n    deviceType: {\n      mobile,\n      tablet,\n      desktop\n    },\n    component,\n    autoPlay = false,\n    infinite = true,\n    customLeftArrow,\n    customRightArrow,\n    itemClass,\n    isRtl\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"data\", \"deviceType\", \"component\", \"autoPlay\", \"infinite\", \"customLeftArrow\", \"customRightArrow\", \"itemClass\", \"isRtl\"]);\n\n  let deviceType = 'desktop';\n\n  if (mobile) {\n    deviceType = 'mobile';\n  }\n\n  if (tablet) {\n    deviceType = 'tablet';\n  }\n\n  return __jsx(\"div\", {\n    dir: \"ltr\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, __jsx(Carousel, _extends({\n    arrows: false,\n    responsive: responsive,\n    ssr: true,\n    showDots: false,\n    slidesToSlide: 1,\n    infinite: infinite,\n    containerClass: \"container-with-dots\",\n    itemClass: itemClass,\n    deviceType: deviceType,\n    autoPlay: autoPlay,\n    autoPlaySpeed: 3000,\n    renderButtonGroupOutside: true,\n    additionalTransfrom: 0,\n    customButtonGroup: __jsx(ButtonGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), data.map((item, index) => {\n    if (component) return component(item);\n    return __jsx(\"div\", {\n      style: {\n        padding: '0 15px',\n        overflow: 'hidden'\n      },\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: item.link,\n      style: {\n        display: 'flex',\n        cursor: 'pointer'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      key: item.id,\n      src: item.imgSrc,\n      alt: item.alt,\n      style: {\n        width: '100%',\n        height: '100%',\n        display: 'block',\n        position: 'relative'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    })));\n  })));\n}","map":{"version":3,"sources":["E:/React Web Work/pickbazar/packages/shop/components/Carousel/Carousel.tsx"],"names":["React","useContext","Carousel","styled","themeGet","LanguageContext","ArrowNext","ArrowPrev","ButtonPrev","ButtonNext","ButtonGroupWrapper","PrevButton","onClick","children","e","preventDefault","NextButton","ButtonGroup","next","previous","isRtl","state","lang","responsive","desktop","breakpoint","max","min","items","tablet","mobile","CustomCarousel","data","deviceType","component","autoPlay","infinite","customLeftArrow","customRightArrow","itemClass","props","map","item","index","padding","overflow","link","display","cursor","id","imgSrc","alt","width","height","position"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport Carousel from 'react-multi-carousel';\nimport styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport LanguageContext from 'contexts/language/language.context';\nimport { ArrowNext, ArrowPrev } from '../AllSvgIcon';\n\nconst ButtonPrev = styled('button')`\n  height: 40px;\n  width: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #ffffff;\n  color: ${themeGet('colors.primary', '#009E7F')};\n  padding: 0;\n  border-radius: 20px;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16);\n  border: 0;\n  outline: 0;\n  cursor: pointer;\n  position: absolute;\n  top: 50%;\n  left: 40px;\n  margin-top: -20px;\n  z-index: 99;\n`;\n\nconst ButtonNext = styled('button')`\n  height: 40px;\n  width: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #ffffff;\n  color: ${themeGet('colors.primary', '#009E7F')};\n  padding: 0;\n  border-radius: 20px;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16);\n  border: 0;\n  outline: 0;\n  cursor: pointer;\n  position: absolute;\n  top: 50%;\n  right: 40px;\n  margin-top: -20px;\n  z-index: 99;\n`;\n\nconst ButtonGroupWrapper = styled('div')``;\nconst PrevButton = ({ onClick, children }: any) => {\n  return (\n    <ButtonPrev\n      onClick={e => {\n        e.preventDefault();\n        onClick();\n      }}\n      className='prevButton'\n    >\n      {children}\n    </ButtonPrev>\n  );\n};\nconst NextButton = ({ onClick, children }: any) => {\n  return (\n    <ButtonNext\n      onClick={e => {\n        e.preventDefault();\n        onClick();\n      }}\n      className='nextButton'\n    >\n      {children}\n    </ButtonNext>\n  );\n};\n\nconst ButtonGroup = ({ next, previous, isRtl = false }: any) => {\n  const {\n    state: { lang },\n  }: any = useContext(LanguageContext);\n\n  return (\n    <ButtonGroupWrapper>\n      {\n        (isRtl = (lang === 'ar' || lang === 'he' ? (\n          true\n        ) : (\n          false\n        )) ? (\n          <>\n            <NextButton onClick={() => next()} className='rtl'>\n              <ArrowPrev />\n            </NextButton>\n            <PrevButton onClick={() => previous()}>\n              <ArrowNext />\n            </PrevButton>\n          </>\n        ) : (\n          <>\n            <PrevButton onClick={() => previous()}>\n              <ArrowPrev />\n            </PrevButton>\n            <NextButton onClick={() => next()}>\n              <ArrowNext />\n            </NextButton>\n          </>\n        ))\n      }\n\n      {/* if prop isRtl true swap prev and next btn */}\n    </ButtonGroupWrapper>\n  );\n};\n\ntype Props = {\n  data: any[] | undefined;\n  deviceType: {\n    mobile: boolean;\n    tablet: boolean;\n    desktop: boolean;\n  };\n  props?: any;\n  component?: any;\n  autoPlay?: boolean;\n  infinite?: boolean;\n  isRtl?: boolean;\n  customLeftArrow?: React.ReactElement;\n  customRightArrow?: React.ReactElement;\n  itemClass?: string;\n};\nconst responsive = {\n  desktop: {\n    breakpoint: { max: 3000, min: 1024 },\n    items: 3,\n  },\n  tablet: {\n    breakpoint: { max: 1024, min: 464 },\n    items: 2,\n  },\n  mobile: {\n    breakpoint: { max: 464, min: 0 },\n    items: 1,\n  },\n};\nexport default function CustomCarousel({\n  data,\n  deviceType: { mobile, tablet, desktop },\n  component,\n  autoPlay = false,\n  infinite = true,\n  customLeftArrow,\n  customRightArrow,\n  itemClass,\n  isRtl,\n  ...props\n}: Props) {\n  let deviceType = 'desktop';\n  if (mobile) {\n    deviceType = 'mobile';\n  }\n  if (tablet) {\n    deviceType = 'tablet';\n  }\n  return (\n    <div dir='ltr'>\n      <Carousel\n        arrows={false}\n        responsive={responsive}\n        ssr={true}\n        showDots={false}\n        slidesToSlide={1}\n        infinite={infinite}\n        containerClass='container-with-dots'\n        itemClass={itemClass}\n        deviceType={deviceType}\n        autoPlay={autoPlay}\n        autoPlaySpeed={3000}\n        renderButtonGroupOutside={true}\n        additionalTransfrom={0}\n        customButtonGroup={<ButtonGroup />}\n        {...props}\n        // use dir ltr when rtl true\n      >\n        {data.map((item: any, index: number) => {\n          if (component) return component(item);\n          return (\n            <div style={{ padding: '0 15px', overflow: 'hidden' }} key={index}>\n              <a\n                href={item.link}\n                style={{ display: 'flex', cursor: 'pointer' }}\n              >\n                <img\n                  key={item.id}\n                  src={item.imgSrc}\n                  alt={item.alt}\n                  style={{\n                    width: '100%',\n                    height: '100%',\n                    display: 'block',\n                    position: 'relative',\n                  }}\n                />\n              </a>\n            </div>\n          );\n        })}\n      </Carousel>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}