{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport ProductDetails from 'containers/ProductDetails/ProductDetails';\nimport ProductDetailsBook from 'containers/ProductDetailsBook/ProductDetailsBook';\nimport { Modal } from '@redq/reuse-modal';\nimport ProductSingleWrapper, { ProductSingleContainer } from 'styled/product-single.style';\nimport CartPopUp from 'containers/Cart/CartPopUp';\nimport { withApollo } from 'helper/apollo';\nimport { GET_PRODUCT_DETAILS } from 'graphql/query/product.query';\n\nconst ProductPage = ({\n  deviceType\n}) => {\n  const {\n    query: {\n      slug\n    }\n  } = useRouter();\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(GET_PRODUCT_DETAILS, {\n    variables: {\n      slug\n    }\n  });\n\n  if (loading) {\n    return __jsx(\"div\", null, \"loading...\");\n  }\n\n  if (error) return __jsx(\"div\", null, \"Error: \", error.message);\n  let content;\n\n  switch (data.product.type) {\n    case 'books':\n      {\n        content = __jsx(ProductDetailsBook, {\n          product: data.product,\n          deviceType: deviceType\n        });\n        break;\n      }\n\n    default:\n      {\n        content = __jsx(ProductDetails, {\n          product: data.product,\n          deviceType: deviceType\n        });\n      }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, data.product.title, \" - PickBazar\")), __jsx(Modal, null, __jsx(ProductSingleWrapper, null, __jsx(ProductSingleContainer, null, content, __jsx(CartPopUp, {\n    deviceType: deviceType\n  })))));\n};\n\nexport default withApollo(ProductPage);","map":null,"metadata":{},"sourceType":"module"}