{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Web Work\\\\pickbazar\\\\packages\\\\shop\\\\containers\\\\LayoutContainer\\\\Header\\\\MobileDrawer.tsx\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { openModal } from '@redq/reuse-modal';\nimport Router from 'next/router';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport Drawer from 'components/Drawer/Drawer';\nimport Button from 'components/Button/Button';\nimport NavLink from 'components/NavLink/NavLink';\nimport { CloseIcon } from 'components/AllSvgIcon';\nimport { DrawerContext } from 'contexts/drawer/drawer.context';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport AuthenticationForm from '../../SignInOutForm/Form';\nimport { FormattedMessage } from 'react-intl';\nimport { HamburgerIcon, DrawerContentWrapper, DrawerClose, DrawerProfile, LogoutView, LoginView, UserAvatar, UserDetails, DrawerMenu, DrawerMenuItem, UesrOptionMenu } from './Header.style';\nimport UserImage from 'image/user.jpg';\nimport { PROCEED_TO_CHECKOUT_PAGE, PROFILE_PAGE, YOUR_ORDER, ORDER_RECEIVED, HELP_PAGE, OFFER_PAGE } from 'constants/navigation';\nconst DrawerMenuItems = [{\n  id: 1,\n  intlLabelId: 'navLinkHome',\n  label: 'Home',\n  href: '/'\n}, {\n  id: 2,\n  intlLabelId: 'navlinkCheckout',\n  label: 'Checkout',\n  href: PROCEED_TO_CHECKOUT_PAGE\n}, {\n  id: 3,\n  intlLabelId: 'navlinkProfile',\n  label: 'Profile',\n  href: PROFILE_PAGE\n}, {\n  id: 4,\n  intlLabelId: 'sidebarYourOrder',\n  label: 'Order',\n  href: YOUR_ORDER\n}, {\n  id: 5,\n  intlLabelId: 'navlinkOrderReceived',\n  label: 'Received',\n  href: ORDER_RECEIVED\n}, {\n  id: 6,\n  intlLabelId: 'navlinkHelp',\n  label: 'Help',\n  href: HELP_PAGE\n}, {\n  id: 7,\n  intlLabelId: 'navlinkOffer',\n  label: 'Offer',\n  href: OFFER_PAGE\n}];\n\nconst MobileDrawer = () => {\n  const {\n    state,\n    dispatch\n  } = useContext(DrawerContext);\n  const {\n    authState: {\n      isAuthenticated\n    },\n    authDispatch\n  } = useContext(AuthContext); // Toggle drawer\n\n  const toggleHandler = React.useCallback(() => {\n    dispatch({\n      type: 'TOGGLE'\n    });\n  }, [dispatch]);\n\n  const handleLogout = () => {\n    if (false) {\n      localStorage.removeItem('access_token');\n      authDispatch({\n        type: 'SIGN_OUT'\n      });\n      Router.push('/');\n    }\n  };\n\n  const resetSearch = () => {\n    dispatch({\n      type: 'RESET'\n    });\n  };\n\n  const signInOutForm = () => {\n    dispatch({\n      type: 'TOGGLE'\n    });\n    authDispatch({\n      type: 'SIGNIN'\n    });\n    openModal({\n      show: true,\n      overlayClassName: 'quick-view-overlay',\n      closeOnClickOutside: true,\n      component: AuthenticationForm,\n      closeComponent: '',\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: 'quick-view-modal',\n        width: 458,\n        height: 'auto'\n      }\n    });\n  };\n\n  return __jsx(Drawer, {\n    width: \"316px\",\n    drawerHandler: __jsx(HamburgerIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })),\n    open: state.isOpen,\n    toggleHandler: toggleHandler,\n    closeButton: __jsx(DrawerClose, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, __jsx(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, __jsx(Scrollbars, {\n    autoHide: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, __jsx(DrawerContentWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, __jsx(DrawerProfile, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, isAuthenticated ? __jsx(LoginView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, __jsx(UserAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: UserImage,\n    alt: \"user_avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  })), __jsx(UserDetails, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"David Kinderson\"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"+990 374 987\"))) : __jsx(LogoutView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, __jsx(Button, {\n    intlButtonId: \"mobileSignInButtonText\",\n    title: \"Join In\",\n    size: \"small\",\n    className: \"sign_in\" // variant=\"primary\"\n    ,\n    onClick: signInOutForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }))), __jsx(DrawerMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, DrawerMenuItems.map(item => __jsx(DrawerMenuItem, {\n    key: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, __jsx(NavLink, {\n    onClick: toggleHandler,\n    href: item.href,\n    label: item.label,\n    intlId: item.intlLabelId,\n    className: \"drawer_menu_item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  })))), isAuthenticated && __jsx(UesrOptionMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, __jsx(DrawerMenuItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, __jsx(NavLink, {\n    href: \"/profile\",\n    label: \"Your Account Settings\",\n    className: \"drawer_menu_item\",\n    intlId: \"navlinkAccountSettings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  })), __jsx(DrawerMenuItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    onClick: handleLogout,\n    className: \"drawer_menu_item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: \"logoutBtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, __jsx(FormattedMessage, {\n    id: \"navlinkLogout\",\n    defaultMessage: \"Logout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }))))))));\n};\n\nexport default MobileDrawer;","map":{"version":3,"sources":["E:/React Web Work/pickbazar/packages/shop/containers/LayoutContainer/Header/MobileDrawer.tsx"],"names":["React","useContext","openModal","Router","Scrollbars","Drawer","Button","NavLink","CloseIcon","DrawerContext","AuthContext","AuthenticationForm","FormattedMessage","HamburgerIcon","DrawerContentWrapper","DrawerClose","DrawerProfile","LogoutView","LoginView","UserAvatar","UserDetails","DrawerMenu","DrawerMenuItem","UesrOptionMenu","UserImage","PROCEED_TO_CHECKOUT_PAGE","PROFILE_PAGE","YOUR_ORDER","ORDER_RECEIVED","HELP_PAGE","OFFER_PAGE","DrawerMenuItems","id","intlLabelId","label","href","MobileDrawer","state","dispatch","authState","isAuthenticated","authDispatch","toggleHandler","useCallback","type","handleLogout","localStorage","removeItem","push","resetSearch","signInOutForm","show","overlayClassName","closeOnClickOutside","component","closeComponent","config","enableResizing","disableDragging","className","width","height","isOpen","map","item"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { openModal } from '@redq/reuse-modal';\nimport Router from 'next/router';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport Drawer from 'components/Drawer/Drawer';\nimport Button from 'components/Button/Button';\nimport NavLink from 'components/NavLink/NavLink';\nimport { CloseIcon } from 'components/AllSvgIcon';\nimport { DrawerContext } from 'contexts/drawer/drawer.context';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport AuthenticationForm from '../../SignInOutForm/Form';\nimport { FormattedMessage } from 'react-intl';\nimport {\n  HamburgerIcon,\n  DrawerContentWrapper,\n  DrawerClose,\n  DrawerProfile,\n  LogoutView,\n  LoginView,\n  UserAvatar,\n  UserDetails,\n  DrawerMenu,\n  DrawerMenuItem,\n  UesrOptionMenu,\n} from './Header.style';\nimport UserImage from 'image/user.jpg';\n\nimport {\n  PROCEED_TO_CHECKOUT_PAGE,\n  PROFILE_PAGE,\n  YOUR_ORDER,\n  ORDER_RECEIVED,\n  HELP_PAGE,\n  OFFER_PAGE,\n} from 'constants/navigation';\n\nconst DrawerMenuItems = [\n  {\n    id: 1,\n    intlLabelId: 'navLinkHome',\n    label: 'Home',\n    href: '/',\n  },\n  {\n    id: 2,\n    intlLabelId: 'navlinkCheckout',\n    label: 'Checkout',\n    href: PROCEED_TO_CHECKOUT_PAGE,\n  },\n  {\n    id: 3,\n    intlLabelId: 'navlinkProfile',\n    label: 'Profile',\n    href: PROFILE_PAGE,\n  },\n  {\n    id: 4,\n    intlLabelId: 'sidebarYourOrder',\n    label: 'Order',\n    href: YOUR_ORDER,\n  },\n  {\n    id: 5,\n    intlLabelId: 'navlinkOrderReceived',\n    label: 'Received',\n    href: ORDER_RECEIVED,\n  },\n  {\n    id: 6,\n    intlLabelId: 'navlinkHelp',\n    label: 'Help',\n    href: HELP_PAGE,\n  },\n  {\n    id: 7,\n    intlLabelId: 'navlinkOffer',\n    label: 'Offer',\n    href: OFFER_PAGE,\n  },\n];\n\nconst MobileDrawer: React.FunctionComponent = () => {\n  const { state, dispatch } = useContext<any>(DrawerContext);\n  const {\n    authState: { isAuthenticated },\n    authDispatch,\n  } = useContext<any>(AuthContext);\n  // Toggle drawer\n  const toggleHandler = React.useCallback(() => {\n    dispatch({\n      type: 'TOGGLE',\n    });\n  }, [dispatch]);\n\n  const handleLogout = () => {\n    if (typeof window !== 'undefined') {\n      localStorage.removeItem('access_token');\n      authDispatch({ type: 'SIGN_OUT' });\n      Router.push('/');\n    }\n  };\n  const resetSearch = () => {\n    dispatch({\n      type: 'RESET',\n    });\n  };\n\n  const signInOutForm = () => {\n    dispatch({\n      type: 'TOGGLE',\n    });\n\n    authDispatch({\n      type: 'SIGNIN',\n    });\n\n    openModal({\n      show: true,\n      overlayClassName: 'quick-view-overlay',\n      closeOnClickOutside: true,\n      component: AuthenticationForm,\n      closeComponent: '',\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: 'quick-view-modal',\n        width: 458,\n        height: 'auto',\n      },\n    });\n  };\n\n  return (\n    <Drawer\n      width='316px'\n      drawerHandler={\n        <HamburgerIcon>\n          <span />\n          <span />\n          <span />\n        </HamburgerIcon>\n      }\n      open={state.isOpen}\n      toggleHandler={toggleHandler}\n      closeButton={\n        <DrawerClose>\n          <CloseIcon />\n        </DrawerClose>\n      }\n    >\n      <Scrollbars autoHide>\n        <DrawerContentWrapper>\n          <DrawerProfile>\n            {isAuthenticated ? (\n              <LoginView>\n                <UserAvatar>\n                  <img src={UserImage} alt='user_avatar' />\n                </UserAvatar>\n                <UserDetails>\n                  <h3>David Kinderson</h3>\n                  <span>+990 374 987</span>\n                </UserDetails>\n              </LoginView>\n            ) : (\n              <LogoutView>\n                <Button\n                  intlButtonId='mobileSignInButtonText'\n                  title='Join In'\n                  size='small'\n                  className='sign_in'\n                  // variant=\"primary\"\n                  onClick={signInOutForm}\n                />\n              </LogoutView>\n            )}\n          </DrawerProfile>\n\n          <DrawerMenu>\n            {DrawerMenuItems.map(item => (\n              <DrawerMenuItem key={item.id}>\n                <NavLink\n                  onClick={toggleHandler}\n                  href={item.href}\n                  label={item.label}\n                  intlId={item.intlLabelId}\n                  className='drawer_menu_item'\n                />\n              </DrawerMenuItem>\n            ))}\n          </DrawerMenu>\n\n          {isAuthenticated && (\n            <UesrOptionMenu>\n              <DrawerMenuItem>\n                <NavLink\n                  href='/profile'\n                  label='Your Account Settings'\n                  className='drawer_menu_item'\n                  intlId='navlinkAccountSettings'\n                />\n              </DrawerMenuItem>\n              <DrawerMenuItem>\n                <div onClick={handleLogout} className='drawer_menu_item'>\n                  <span className='logoutBtn'>\n                    <FormattedMessage\n                      id='navlinkLogout'\n                      defaultMessage='Logout'\n                    />\n                  </span>\n                </div>\n              </DrawerMenuItem>\n            </UesrOptionMenu>\n          )}\n        </DrawerContentWrapper>\n      </Scrollbars>\n    </Drawer>\n  );\n};\n\nexport default MobileDrawer;\n"]},"metadata":{},"sourceType":"module"}