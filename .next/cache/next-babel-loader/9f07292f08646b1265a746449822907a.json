{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"E:\\\\React Web Work\\\\pickbazar\\\\packages\\\\shop\\\\components\\\\ProductCard\\\\ProductCard.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { CartContext } from 'contexts/cart/cart.context';\nimport Image from 'components/Image/Image';\nimport Button from '../Button/Button';\nimport InputIncDec from '../InputIncDec/InputIncDec';\nimport { CartIcon } from '../AllSvgIcon';\nimport { ProductCardWrapper, ProductImageWrapper, ProductInfo, DiscountPercent } from './ProductCard.style';\nimport { getProductQuantity, findProductIndex } from '../helpers/utility';\n\nvar ProductCard = function ProductCard(_ref) {\n  var title = _ref.title,\n      image = _ref.image,\n      weight = _ref.weight,\n      price = _ref.price,\n      salePrice = _ref.salePrice,\n      discountInPercent = _ref.discountInPercent,\n      cartProducts = _ref.cartProducts,\n      addToCart = _ref.addToCart,\n      updateCart = _ref.updateCart,\n      value = _ref.value,\n      currency = _ref.currency,\n      onChange = _ref.onChange,\n      increment = _ref.increment,\n      decrement = _ref.decrement,\n      data = _ref.data,\n      deviceType = _ref.deviceType,\n      onClick = _ref.onClick,\n      props = _objectWithoutProperties(_ref, [\"title\", \"image\", \"weight\", \"price\", \"salePrice\", \"discountInPercent\", \"cartProducts\", \"addToCart\", \"updateCart\", \"value\", \"currency\", \"onChange\", \"increment\", \"decrement\", \"data\", \"deviceType\", \"onClick\"]);\n\n  var _React$useContext = React.useContext(CartContext),\n      add = _React$useContext.add,\n      update = _React$useContext.update,\n      products = _React$useContext.products;\n\n  var index = data && data.id ? findProductIndex(products, data.id) : -1;\n  var quantity = getProductQuantity(products, index);\n\n  var handleClick = function handleClick(e) {\n    e.stopPropagation();\n    add(e, data);\n  };\n\n  var handleUpdate = function handleUpdate(value, e) {\n    if (index === -1 && value === 1) {\n      add(e, data);\n    } else {\n      update(data.id, value);\n    }\n  };\n\n  return __jsx(ProductCardWrapper, {\n    onClick: onClick,\n    className: \"product-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(ProductImageWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(Image, {\n    url: image,\n    className: \"product-image\",\n    style: {\n      position: 'relative'\n    },\n    alt: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), discountInPercent ? __jsx(React.Fragment, null, __jsx(DiscountPercent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, discountInPercent, \"%\")) : ''), __jsx(ProductInfo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"product-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, title), __jsx(\"span\", {\n    className: \"product-weight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, weight), __jsx(\"div\", {\n    className: \"product-meta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"productPriceWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, discountInPercent ? __jsx(\"span\", {\n    className: \"discountedPrice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, currency, price) : '', __jsx(\"span\", {\n    className: \"product-price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, currency, salePrice ? salePrice : price)), quantity <= 0 ? __jsx(Button, {\n    title: \"Cart\",\n    intlButtonId: \"addCartButton\",\n    iconPosition: \"left\",\n    colors: \"primary\",\n    size: \"small\",\n    variant: \"outlined\",\n    className: \"cart-button\",\n    icon: __jsx(CartIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }),\n    onClick: function onClick(e) {\n      return handleClick(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }) : __jsx(InputIncDec, {\n    value: quantity,\n    onClick: function onClick(e) {\n      e.stopPropagation(onclick);\n    },\n    onUpdate: function onUpdate(value, e) {\n      return handleUpdate(value, e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }))));\n};\n\nexport default ProductCard;","map":{"version":3,"sources":["E:/React Web Work/pickbazar/packages/shop/components/ProductCard/ProductCard.tsx"],"names":["React","CartContext","Image","Button","InputIncDec","CartIcon","ProductCardWrapper","ProductImageWrapper","ProductInfo","DiscountPercent","getProductQuantity","findProductIndex","ProductCard","title","image","weight","price","salePrice","discountInPercent","cartProducts","addToCart","updateCart","value","currency","onChange","increment","decrement","data","deviceType","onClick","props","useContext","add","update","products","index","id","quantity","handleClick","e","stopPropagation","handleUpdate","position","onclick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { CartContext } from 'contexts/cart/cart.context';\nimport { FormattedMessage } from 'react-intl';\nimport Image from 'components/Image/Image';\nimport Button from '../Button/Button';\nimport InputIncDec from '../InputIncDec/InputIncDec';\nimport { CartIcon } from '../AllSvgIcon';\nimport {\n  ProductCardWrapper,\n  ProductImageWrapper,\n  ProductInfo,\n  SaleTag,\n  DiscountPercent,\n} from './ProductCard.style';\nimport { getProductQuantity, findProductIndex } from '../helpers/utility';\n\ntype ProductCardProps = {\n  title: string;\n  image: any;\n  weight: string;\n  currency: string;\n  description: string;\n  price: number;\n  salePrice?: number;\n  discountInPercent?: number;\n  data: any;\n  onClick?: (e: any) => void;\n  onChange?: (e: any) => void;\n  increment?: (e: any) => void;\n  decrement?: (e: any) => void;\n  cartProducts?: any;\n  addToCart?: any;\n  updateCart?: any;\n  value?: any;\n  deviceType?: any;\n};\n\nconst ProductCard: React.FC<ProductCardProps> = ({\n  title,\n  image,\n  weight,\n  price,\n  salePrice,\n  discountInPercent,\n  cartProducts,\n  addToCart,\n  updateCart,\n  value,\n  currency,\n  onChange,\n  increment,\n  decrement,\n  data,\n  deviceType,\n  onClick,\n  ...props\n}) => {\n  const { add, update, products } = React.useContext(CartContext);\n  const index = data && data.id ? findProductIndex(products, data.id) : -1;\n  const quantity = getProductQuantity(products, index);\n\n  const handleClick = (e: any) => {\n    e.stopPropagation();\n    add(e, data);\n  };\n\n  const handleUpdate = (value: number, e: any) => {\n    if (index === -1 && value === 1) {\n      add(e, data);\n    } else {\n      update(data.id, value);\n    }\n  };\n\n  return (\n    <ProductCardWrapper onClick={onClick} className='product-card'>\n      <ProductImageWrapper>\n        <Image\n          url={image}\n          className='product-image'\n          style={{ position: 'relative' }}\n          alt={title}\n        />\n        {discountInPercent ? (\n          <>\n            <DiscountPercent>{discountInPercent}%</DiscountPercent>\n          </>\n        ) : (\n          ''\n        )}\n      </ProductImageWrapper>\n      <ProductInfo>\n        <h3 className='product-title'>{title}</h3>\n        <span className='product-weight'>{weight}</span>\n        <div className='product-meta'>\n          <div className='productPriceWrapper'>\n            {discountInPercent ? (\n              <span className='discountedPrice'>\n                {currency}\n                {price}\n              </span>\n            ) : (\n              ''\n            )}\n\n            <span className='product-price'>\n              {currency}\n              {salePrice ? salePrice : price}\n            </span>\n          </div>\n\n          {quantity <= 0 ? (\n            <Button\n              title='Cart'\n              intlButtonId='addCartButton'\n              iconPosition='left'\n              colors='primary'\n              size='small'\n              variant='outlined'\n              className='cart-button'\n              icon={<CartIcon />}\n              onClick={e => handleClick(e)}\n            />\n          ) : (\n            <InputIncDec\n              value={quantity}\n              onClick={(e: any) => {\n                e.stopPropagation(onclick);\n              }}\n              onUpdate={(value: number, e: any) => handleUpdate(value, e)}\n            />\n          )}\n        </div>\n      </ProductInfo>\n    </ProductCardWrapper>\n  );\n};\n\nexport default ProductCard;\n"]},"metadata":{},"sourceType":"module"}