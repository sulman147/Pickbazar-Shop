{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useState } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { openModal } from '@redq/reuse-modal';\nimport NavLink from 'components/NavLink/NavLink';\nimport Popover from 'components/Popover/Popover';\nimport SearchBox from 'components/SearchBox/SearchBox';\nimport { SearchContext } from 'contexts/search/search.context';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport AuthenticationForm from '../../SignInOutForm/Form';\nimport { FormattedMessage } from 'react-intl';\nimport Button from 'components/Button/Button';\nimport LanguageContext from 'contexts/language/language.context';\nimport { FruitsVegetable, MenuDown, FacialCare, DressIcon, Handbag, HelpIcon, BookIcon, FurnitureIcon, DEFlag, CNFlag, USFlag, ILFlag, ESFlag, SAFlag } from 'components/AllSvgIcon';\nimport HeaderWrapper, { HeaderLeftSide, HeaderRightSide, Logo, MainMenu, SelectedType, DropDownArrow, SelectedLang, LanguageItem, LangSwithcer, Flag, TypeIcon } from './Header.style';\nimport Logoimage from 'image/logo.svg';\nimport UserImage from 'image/user.jpg';\nimport { HOME_PAGE, GROCERY_PAGE, CLOTHING, MAKEUP_PAGE, BAGS_PAGE, FURNITURE_PAGE, BOOK_PAGE, PROCEED_TO_CHECKOUT_PAGE, PROFILE_PAGE, ORDER_RECEIVED, YOUR_ORDER, OFFER_PAGE, HELP_PAGE } from 'constants/navigation';\nconst MenuArray = [{\n  link: GROCERY_PAGE,\n  icon: __jsx(FruitsVegetable, null),\n  label: 'Grocery'\n}, {\n  link: MAKEUP_PAGE,\n  label: 'Makeup',\n  icon: __jsx(FacialCare, null)\n}, {\n  link: BAGS_PAGE,\n  label: 'Bags',\n  icon: __jsx(Handbag, null)\n}, {\n  link: CLOTHING,\n  label: 'Clothing',\n  icon: __jsx(DressIcon, null)\n}, {\n  link: FURNITURE_PAGE,\n  label: 'Furniture',\n  icon: __jsx(FurnitureIcon, {\n    width: \"15px\",\n    height: \"13px\"\n  })\n}, {\n  link: BOOK_PAGE,\n  label: 'Book',\n  icon: __jsx(BookIcon, {\n    width: \"15px\",\n    height: \"13px\"\n  })\n}];\nconst DropDownMenuArray = [{\n  link: PROFILE_PAGE,\n  label: 'Profile',\n  intlId: 'navlinkProfile'\n}, {\n  link: PROCEED_TO_CHECKOUT_PAGE,\n  label: 'Checkout',\n  intlId: 'navlinkCheckout'\n}, {\n  link: YOUR_ORDER,\n  label: 'Order',\n  intlId: 'sidebarYourOrder'\n}, {\n  link: ORDER_RECEIVED,\n  label: 'Order invoice',\n  intlId: 'navlinkOrderReceived'\n}];\nconst LanguageArray = [{\n  id: 'ar',\n  label: 'Arabic',\n  intlLangName: 'intlArabic',\n  icon: __jsx(SAFlag, null)\n}, {\n  id: 'zh',\n  label: 'Chinese',\n  intlLangName: 'intlChinese',\n  icon: __jsx(CNFlag, null)\n}, {\n  id: 'en',\n  label: 'English',\n  intlLangName: 'intlEnglish',\n  icon: __jsx(USFlag, null)\n}, {\n  id: 'de',\n  label: 'German',\n  intlLangName: 'intlGerman',\n  icon: __jsx(DEFlag, null)\n}, {\n  id: 'he',\n  label: 'Hebrew',\n  intlLangName: 'intlHebrew',\n  icon: __jsx(ILFlag, null)\n}, {\n  id: 'es',\n  label: 'Spanish',\n  intlLangName: 'intlSpanish',\n  icon: __jsx(ESFlag, null)\n}];\n\nconst Header = ({\n  style,\n  className,\n  token,\n  pathname\n}) => {\n  const {\n    state: {\n      lang\n    },\n    toggleLanguage\n  } = useContext(LanguageContext);\n  const activeMenuItem = MenuArray.find(item => item.link === pathname);\n  const selectedLangindex = LanguageArray.findIndex(x => x.id === lang);\n  const {\n    authState: {\n      isAuthenticated\n    },\n    authDispatch\n  } = useContext(AuthContext);\n  const {\n    state,\n    dispatch\n  } = useContext(SearchContext);\n  const {\n    0: activeMenu,\n    1: setActiveMenu\n  } = useState(activeMenuItem || {\n    link: GROCERY_PAGE,\n    icon: __jsx(FruitsVegetable, null),\n    label: 'Grocery'\n  });\n  const {\n    text\n  } = state;\n\n  const handleSearch = text => {\n    dispatch({\n      type: 'UPDATE',\n      payload: _objectSpread({}, state, {\n        text\n      })\n    });\n  };\n\n  const {\n    page\n  } = state,\n        urlState = _objectWithoutProperties(state, [\"page\"]);\n\n  const handleClickSearchButton = () => {\n    Router.push({\n      pathname: pathname === '/' ? '/grocery' : pathname,\n      query: _objectSpread({}, urlState, {\n        text\n      })\n    });\n  };\n\n  const handleLogout = () => {\n    if (false) {\n      localStorage.removeItem('access_token');\n      authDispatch({\n        type: 'SIGN_OUT'\n      });\n      Router.push('/');\n    }\n  };\n\n  const resetSearch = selectedMenu => {\n    setActiveMenu(selectedMenu);\n    dispatch({\n      type: 'RESET'\n    });\n  };\n\n  const NavItem = item => {\n    return __jsx(NavLink, {\n      key: item.link,\n      onClick: () => resetSearch(item),\n      className: \"menu-item\",\n      href: item.link,\n      label: item.label,\n      icon: item.icon,\n      iconClass: \"menu-item-icon\"\n    });\n  };\n\n  const handleToggleLanguage = e => {\n    toggleLanguage(e.target.value);\n  };\n\n  const LanguageMenu = item => {\n    return __jsx(LanguageItem, {\n      onClick: handleToggleLanguage,\n      key: item.id,\n      value: item.id\n    }, __jsx(\"span\", null, item.icon), __jsx(FormattedMessage, {\n      id: item.intlLangName,\n      defaultMessage: item.label\n    }));\n  };\n\n  const signInOutForm = () => {\n    authDispatch({\n      type: 'SIGNIN'\n    });\n    openModal({\n      show: true,\n      overlayClassName: 'quick-view-overlay',\n      closeOnClickOutside: true,\n      component: AuthenticationForm,\n      closeComponent: '',\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: 'quick-view-modal',\n        width: 458,\n        height: 'auto'\n      }\n    });\n  };\n\n  const isHomePage = pathname === HOME_PAGE || pathname === GROCERY_PAGE || pathname === CLOTHING || pathname === MAKEUP_PAGE || pathname === BOOK_PAGE || pathname === FURNITURE_PAGE || pathname === BAGS_PAGE;\n  return __jsx(HeaderWrapper, {\n    style: style,\n    className: className\n  }, __jsx(HeaderLeftSide, null, __jsx(Logo, {\n    onClick: () => resetSearch({\n      link: GROCERY_PAGE,\n      icon: __jsx(FruitsVegetable, null),\n      label: 'Grocery'\n    })\n  }, __jsx(Link, {\n    href: HOME_PAGE\n  }, __jsx(\"a\", null, __jsx(\"img\", {\n    src: Logoimage,\n    alt: \"pickbazar-admin\"\n  })))), __jsx(MainMenu, null, __jsx(Popover, {\n    className: \"right\",\n    handler: __jsx(SelectedType, null, __jsx(\"span\", null, __jsx(TypeIcon, null, activeMenu.icon), __jsx(\"span\", null, activeMenu.label)), __jsx(DropDownArrow, null, __jsx(MenuDown, null))),\n    content: __jsx(React.Fragment, null, MenuArray.map(NavItem))\n  }))), isHomePage ? __jsx(SearchBox, {\n    className: \"headerSearch\",\n    handleSearch: value => handleSearch(value),\n    onClick: handleClickSearchButton,\n    placeholder: \"Search anything...\",\n    hideType: true,\n    minimal: true,\n    showSvg: true,\n    style: {\n      width: '100%'\n    },\n    value: text || ''\n  }) : null, __jsx(HeaderRightSide, null, __jsx(NavLink, {\n    className: \"menu-item\",\n    href: OFFER_PAGE,\n    label: \"Offer\",\n    intlId: \"navlinkOffer\"\n  }), __jsx(NavLink, {\n    className: \"menu-item\",\n    href: HELP_PAGE,\n    label: \"Need Help\",\n    intlId: \"navlinkHelp\",\n    iconClass: \"menu-icon\",\n    icon: __jsx(HelpIcon, null)\n  }), __jsx(LangSwithcer, null, __jsx(Popover, {\n    className: \"right\",\n    handler: __jsx(SelectedLang, null, __jsx(Flag, null, LanguageArray[selectedLangindex].icon), __jsx(\"span\", null, __jsx(FormattedMessage, {\n      id: LanguageArray[selectedLangindex].intlLangName,\n      defaultMessage: LanguageArray[selectedLangindex].label\n    }))),\n    content: __jsx(React.Fragment, null, LanguageArray.map(LanguageMenu))\n  })), !isAuthenticated ? __jsx(Button, {\n    onClick: signInOutForm,\n    size: \"small\",\n    title: \"Join\",\n    style: {\n      fontSize: 15,\n      color: '#fff'\n    },\n    intlButtonId: \"joinButton\"\n  }) : __jsx(Popover, {\n    direction: \"right\",\n    className: \"user-pages-dropdown\",\n    handler: __jsx(\"img\", {\n      src: UserImage,\n      alt: \"user\"\n    }),\n    content: __jsx(React.Fragment, null, DropDownMenuArray.map((item, idx) => __jsx(NavLink, {\n      key: idx,\n      className: \"menu-item\",\n      href: item.link,\n      label: item.label,\n      intlId: item.intlId\n    })), __jsx(\"div\", {\n      className: \"menu-item\",\n      onClick: handleLogout\n    }, __jsx(\"a\", null, __jsx(\"span\", null, __jsx(FormattedMessage, {\n      id: \"navlinkLogout\",\n      defaultMessage: \"Logout\"\n    })))))\n  })));\n};\n\nexport default Header;","map":null,"metadata":{},"sourceType":"module"}