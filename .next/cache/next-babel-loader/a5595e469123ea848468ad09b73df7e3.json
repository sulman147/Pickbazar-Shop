{"ast":null,"code":"import cookie from 'js-cookie';\nimport nextCookie from 'next-cookies'; // import { isBrowser } from './isBrowser';\n\nconst isBrowser = false;\nexport const getCookieFromBrowser = key => {\n  return cookie.get(key);\n};\nexport const getCookieFromServer = (ctx, key = 'id_token') => {\n  const cookie = nextCookie(ctx);\n  const token = cookie && cookie[key] ? cookie[key] : false;\n\n  if (!token) {\n    return null;\n  }\n\n  return token;\n};\nexport const getCookie = (key, context) => {\n  return isBrowser ? getCookieFromBrowser(key) : getCookieFromServer(context, key);\n};\nexport const setCookie = (key, token) => {\n  cookie.set(key, token, {\n    expires: 7\n  });\n};\nexport const removeCookie = key => {\n  cookie.remove(key);\n};","map":{"version":3,"sources":["E:/React Web Work/pickbazar/packages/shop/helper/session.ts"],"names":["cookie","nextCookie","isBrowser","getCookieFromBrowser","key","get","getCookieFromServer","ctx","token","getCookie","context","setCookie","set","expires","removeCookie","remove"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CACA;;AACA,MAAMC,SAAS,QAAf;AAEA,OAAO,MAAMC,oBAAoB,GAAIC,GAAD,IAAsB;AACxD,SAAOJ,MAAM,CAACK,GAAP,CAAWD,GAAX,CAAP;AACD,CAFM;AAIP,OAAO,MAAME,mBAAmB,GAAG,CAACC,GAAD,EAAWH,GAAG,GAAG,UAAjB,KAAgC;AACjE,QAAMJ,MAAM,GAAGC,UAAU,CAACM,GAAD,CAAzB;AACA,QAAMC,KAAK,GAAGR,MAAM,IAAIA,MAAM,CAACI,GAAD,CAAhB,GAAwBJ,MAAM,CAACI,GAAD,CAA9B,GAAsC,KAApD;;AACA,MAAI,CAACI,KAAL,EAAY;AACV,WAAO,IAAP;AACD;;AACD,SAAOA,KAAP;AACD,CAPM;AASP,OAAO,MAAMC,SAAS,GAAG,CAACL,GAAD,EAAcM,OAAd,KAAgC;AACvD,SAAOR,SAAS,GACZC,oBAAoB,CAACC,GAAD,CADR,GAEZE,mBAAmB,CAACI,OAAD,EAAUN,GAAV,CAFvB;AAGD,CAJM;AAMP,OAAO,MAAMO,SAAS,GAAG,CAACP,GAAD,EAAcI,KAAd,KAA6B;AACpDR,EAAAA,MAAM,CAACY,GAAP,CAAWR,GAAX,EAAgBI,KAAhB,EAAuB;AAAEK,IAAAA,OAAO,EAAE;AAAX,GAAvB;AACD,CAFM;AAIP,OAAO,MAAMC,YAAY,GAAIV,GAAD,IAAiB;AAC3CJ,EAAAA,MAAM,CAACe,MAAP,CAAcX,GAAd;AACD,CAFM","sourcesContent":["import cookie from 'js-cookie';\nimport nextCookie from 'next-cookies';\n// import { isBrowser } from './isBrowser';\nconst isBrowser = typeof window !== 'undefined';\n\nexport const getCookieFromBrowser = (key: string): any => {\n  return cookie.get(key);\n};\n\nexport const getCookieFromServer = (ctx: any, key = 'id_token') => {\n  const cookie = nextCookie(ctx);\n  const token = cookie && cookie[key] ? cookie[key] : false;\n  if (!token) {\n    return null;\n  }\n  return token;\n};\n\nexport const getCookie = (key: string, context?: any) => {\n  return isBrowser\n    ? getCookieFromBrowser(key)\n    : getCookieFromServer(context, key);\n};\n\nexport const setCookie = (key: string, token: any) => {\n  cookie.set(key, token, { expires: 7 });\n};\n\nexport const removeCookie = (key: string) => {\n  cookie.remove(key);\n};\n"]},"metadata":{},"sourceType":"module"}