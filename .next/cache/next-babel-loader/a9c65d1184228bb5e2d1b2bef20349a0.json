{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport App from 'next/app';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from 'theme';\nimport { CartProvider } from 'contexts/cart/cart.provider';\nimport { AuthProvider } from 'contexts/auth/auth.provider';\nimport { StickyProvider } from 'contexts/app/app.provider';\nimport { SearchProvider } from 'contexts/search/search.provider';\nimport LanguageProvider from 'contexts/language/language.provider';\nimport AppLayout from 'containers/LayoutContainer/AppLayout';\nimport { useDeviceType } from 'helper/useDeviceType'; // Language translation files\n\nimport localEn from 'data/translation/en.json';\nimport localAr from 'data/translation/ar.json';\nimport localEs from 'data/translation/es.json';\nimport localDe from 'data/translation/de.json';\nimport localCn from 'data/translation/zh.json';\nimport localIl from 'data/translation/he.json'; // External CSS import here\n\nimport 'rc-table/assets/index.css';\nimport 'rc-collapse/assets/index.css';\nimport 'react-multi-carousel/lib/styles.css';\nimport '@redq/reuse-modal/lib/index.css';\nimport { GlobalStyle } from 'styled/global.style'; // Language translation Config\n\nconst messages = {\n  en: localEn,\n  ar: localAr,\n  es: localEs,\n  de: localDe,\n  zh: localCn,\n  he: localIl\n};\nexport default function ExtendedApp({\n  Component,\n  pageProps,\n  query,\n  userAgent\n}) {\n  const deviceType = useDeviceType(userAgent);\n  return __jsx(ThemeProvider, {\n    theme: theme\n  }, __jsx(LanguageProvider, {\n    messages: messages\n  }, __jsx(CartProvider, null, __jsx(SearchProvider, {\n    query: query\n  }, __jsx(StickyProvider, null, __jsx(AuthProvider, null, __jsx(React.Fragment, null, __jsx(AppLayout, {\n    deviceType: deviceType\n  }, __jsx(Component, _extends({}, pageProps, {\n    deviceType: deviceType\n  }))), __jsx(GlobalStyle, null))))))));\n}\n\nExtendedApp.getInitialProps = async appContext => {\n  const appProps = await App.getInitialProps(appContext);\n  const {\n    req,\n    query\n  } = appContext.ctx;\n  const userAgent = req ? req.headers['user-agent'] : navigator.userAgent;\n  return _objectSpread({}, appProps, {\n    userAgent,\n    query\n  });\n};","map":null,"metadata":{},"sourceType":"module"}