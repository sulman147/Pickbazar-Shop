{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getCategories($type: String!) {\\n    categories(type: $type) {\\n      id\\n      title\\n      slug\\n      icon\\n      children {\\n        id\\n        title\\n        slug\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport Sticky from 'react-stickynode';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport Popover from 'components/Popover/Popover';\nimport CategoryDropdown from 'components/CategoryDropdown/SpringDropdown';\nimport { ArrowDropDown, CategoryIcon } from 'components/AllSvgIcon';\nimport { SearchContext } from 'contexts/search/search.context';\nimport { useStickyState } from 'contexts/app/app.provider';\nimport { SidebarMobileLoader, SidebarLoader } from 'components/Placeholder/Placeholder';\nimport { CategoryWrapper, PopoverHandler, PopoverWrapper, SidebarWrapper } from './Sidebar.style';\nimport { Accessories, BathOil, BeautyHealth, Beverage, Breakfast, Cooking, Dairy, Deodorent, Eyes, Face, FacialCare, FruitsVegetable, HandBags, HomeCleaning, LaptopBags, Lips, MeatFish, OralCare, OuterWear, Pants, PetCare, Purse, ShavingNeeds, Shirts, ShoulderBags, Skirts, Snacks, Tops, Wallet, WomenDress } from 'components/AllSvgIcon';\nvar GET_CATEGORIES = gql(_templateObject());\nvar iconTypes = {\n  Accessories: Accessories,\n  BathOil: BathOil,\n  BeautyHealth: BeautyHealth,\n  Beverage: Beverage,\n  Breakfast: Breakfast,\n  Cooking: Cooking,\n  Dairy: Dairy,\n  Deodorent: Deodorent,\n  Eyes: Eyes,\n  Face: Face,\n  FacialCare: FacialCare,\n  FruitsVegetable: FruitsVegetable,\n  HandBags: HandBags,\n  HomeCleaning: HomeCleaning,\n  LaptopBags: LaptopBags,\n  Lips: Lips,\n  MeatFish: MeatFish,\n  OralCare: OralCare,\n  OuterWear: OuterWear,\n  Pants: Pants,\n  PetCare: PetCare,\n  Purse: Purse,\n  ShavingNeeds: ShavingNeeds,\n  Shirts: Shirts,\n  ShoulderBags: ShoulderBags,\n  Skirts: Skirts,\n  Snacks: Snacks,\n  Tops: Tops,\n  Wallet: Wallet,\n  WomenDress: WomenDress\n};\n\nvar SidebarCategory = function SidebarCategory(_ref) {\n  var _ref$deviceType = _ref.deviceType,\n      mobile = _ref$deviceType.mobile,\n      tablet = _ref$deviceType.tablet,\n      desktop = _ref$deviceType.desktop,\n      type = _ref.type;\n\n  var _useContext = useContext(SearchContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var router = useRouter();\n  var pathname = router.pathname;\n\n  var _useQuery = useQuery(GET_CATEGORIES, {\n    variables: {\n      type: type\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading;\n\n  var selectedQueries = state && state.category && state.category.split(',');\n\n  var _handleCategorySelection = function handleCategorySelection(slug) {\n    dispatch({\n      type: 'UPDATE',\n      payload: _objectSpread({}, state, {\n        page: 1,\n        category: \"\".concat(slug)\n      })\n    });\n\n    var page = state.page,\n        urlState = _objectWithoutProperties(state, [\"page\"]);\n\n    router.push({\n      pathname: pathname,\n      query: _objectSpread({}, urlState, {\n        category: slug\n      })\n    }, {\n      pathname: pathname === '/' ? \"\".concat(pathname).concat(type) : pathname,\n      query: _objectSpread({}, urlState, {\n        category: slug\n      })\n    }, {\n      shallow: true\n    });\n  };\n\n  var isSidebarSticky = useStickyState('isSidebarSticky');\n\n  if (!data || loading) {\n    if (mobile || tablet) {\n      return __jsx(SidebarMobileLoader, null);\n    }\n\n    return __jsx(SidebarLoader, null);\n  }\n\n  return __jsx(CategoryWrapper, null, (mobile || tablet) && __jsx(Popover, {\n    handler: __jsx(PopoverHandler, null, __jsx(\"div\", null, __jsx(CategoryIcon, null), \"Select your Category\"), __jsx(\"div\", null, __jsx(ArrowDropDown, null))),\n    className: \"category-popover\",\n    content: __jsx(React.Fragment, null, __jsx(CategoryDropdown, {\n      items: data.categories,\n      iconList: iconTypes,\n      handleCategorySelection: function handleCategorySelection(slug) {\n        return _handleCategorySelection(slug);\n      },\n      selectedQueries: selectedQueries\n    }))\n  }), desktop && __jsx(React.Fragment, null, __jsx(PopoverWrapper, null, __jsx(Popover, {\n    handler: __jsx(PopoverHandler, null, __jsx(\"div\", null, __jsx(CategoryIcon, null), \"Select your Category\"), __jsx(\"div\", null, __jsx(ArrowDropDown, null))),\n    className: \"category-popover\",\n    content: __jsx(React.Fragment, null, __jsx(CategoryDropdown, {\n      items: data.categories,\n      iconList: iconTypes,\n      handleCategorySelection: function handleCategorySelection(slug) {\n        return _handleCategorySelection(slug);\n      },\n      selectedQueries: selectedQueries\n    }))\n  })), __jsx(SidebarWrapper, null, __jsx(Sticky, {\n    enabled: isSidebarSticky,\n    top: 110\n  }, __jsx(Scrollbars, {\n    universal: true,\n    autoHide: true,\n    autoHeight: true,\n    autoHeightMax: 688\n  }, __jsx(CategoryDropdown, {\n    items: data.categories,\n    iconList: iconTypes,\n    handleCategorySelection: function handleCategorySelection(id) {\n      return _handleCategorySelection(id);\n    },\n    selectedQueries: selectedQueries\n  }))))));\n};\n\nexport default SidebarCategory;","map":null,"metadata":{},"sourceType":"module"}