{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport Carousel from 'react-multi-carousel';\nimport styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport LanguageContext from 'contexts/language/language.context';\nimport { ArrowNext, ArrowPrev } from '../AllSvgIcon';\nvar ButtonPrev = styled('button').withConfig({\n  displayName: \"Carousel__ButtonPrev\",\n  componentId: \"sc-109i4p7-0\"\n})([\"height:40px;width:40px;display:flex;align-items:center;justify-content:center;background-color:#ffffff;color:\", \";padding:0;border-radius:20px;box-shadow:0 3px 6px rgba(0,0,0,0.16);border:0;outline:0;cursor:pointer;position:absolute;top:50%;left:40px;margin-top:-20px;z-index:99;\"], themeGet('colors.primary', '#009E7F'));\nvar ButtonNext = styled('button').withConfig({\n  displayName: \"Carousel__ButtonNext\",\n  componentId: \"sc-109i4p7-1\"\n})([\"height:40px;width:40px;display:flex;align-items:center;justify-content:center;background-color:#ffffff;color:\", \";padding:0;border-radius:20px;box-shadow:0 3px 6px rgba(0,0,0,0.16);border:0;outline:0;cursor:pointer;position:absolute;top:50%;right:40px;margin-top:-20px;z-index:99;\"], themeGet('colors.primary', '#009E7F'));\nvar ButtonGroupWrapper = styled('div').withConfig({\n  displayName: \"Carousel__ButtonGroupWrapper\",\n  componentId: \"sc-109i4p7-2\"\n})([\"\"]);\n\nvar PrevButton = function PrevButton(_ref) {\n  var _onClick = _ref.onClick,\n      children = _ref.children;\n  return __jsx(ButtonPrev, {\n    onClick: function onClick(e) {\n      e.preventDefault();\n\n      _onClick();\n    },\n    className: \"prevButton\"\n  }, children);\n};\n\nvar NextButton = function NextButton(_ref2) {\n  var _onClick2 = _ref2.onClick,\n      children = _ref2.children;\n  return __jsx(ButtonNext, {\n    onClick: function onClick(e) {\n      e.preventDefault();\n\n      _onClick2();\n    },\n    className: \"nextButton\"\n  }, children);\n};\n\nvar ButtonGroup = function ButtonGroup(_ref3) {\n  var next = _ref3.next,\n      previous = _ref3.previous,\n      _ref3$isRtl = _ref3.isRtl,\n      isRtl = _ref3$isRtl === void 0 ? false : _ref3$isRtl;\n\n  var _useContext = useContext(LanguageContext),\n      lang = _useContext.state.lang;\n\n  return __jsx(ButtonGroupWrapper, null, isRtl = (lang === 'ar' || lang === 'he' ? true : false) ? __jsx(React.Fragment, null, __jsx(NextButton, {\n    onClick: function onClick() {\n      return next();\n    },\n    className: \"rtl\"\n  }, __jsx(ArrowPrev, null)), __jsx(PrevButton, {\n    onClick: function onClick() {\n      return previous();\n    }\n  }, __jsx(ArrowNext, null))) : __jsx(React.Fragment, null, __jsx(PrevButton, {\n    onClick: function onClick() {\n      return previous();\n    }\n  }, __jsx(ArrowPrev, null)), __jsx(NextButton, {\n    onClick: function onClick() {\n      return next();\n    }\n  }, __jsx(ArrowNext, null))));\n};\n\nvar responsive = {\n  desktop: {\n    breakpoint: {\n      max: 3000,\n      min: 1024\n    },\n    items: 3\n  },\n  tablet: {\n    breakpoint: {\n      max: 1024,\n      min: 464\n    },\n    items: 2\n  },\n  mobile: {\n    breakpoint: {\n      max: 464,\n      min: 0\n    },\n    items: 1\n  }\n};\nexport default function CustomCarousel(_ref4) {\n  var data = _ref4.data,\n      _ref4$deviceType = _ref4.deviceType,\n      mobile = _ref4$deviceType.mobile,\n      tablet = _ref4$deviceType.tablet,\n      desktop = _ref4$deviceType.desktop,\n      component = _ref4.component,\n      _ref4$autoPlay = _ref4.autoPlay,\n      autoPlay = _ref4$autoPlay === void 0 ? false : _ref4$autoPlay,\n      _ref4$infinite = _ref4.infinite,\n      infinite = _ref4$infinite === void 0 ? true : _ref4$infinite,\n      customLeftArrow = _ref4.customLeftArrow,\n      customRightArrow = _ref4.customRightArrow,\n      itemClass = _ref4.itemClass,\n      isRtl = _ref4.isRtl,\n      props = _objectWithoutProperties(_ref4, [\"data\", \"deviceType\", \"component\", \"autoPlay\", \"infinite\", \"customLeftArrow\", \"customRightArrow\", \"itemClass\", \"isRtl\"]);\n\n  var deviceType = 'desktop';\n\n  if (mobile) {\n    deviceType = 'mobile';\n  }\n\n  if (tablet) {\n    deviceType = 'tablet';\n  }\n\n  return __jsx(\"div\", {\n    dir: \"ltr\"\n  }, __jsx(Carousel, _extends({\n    arrows: false,\n    responsive: responsive,\n    ssr: true,\n    showDots: false,\n    slidesToSlide: 1,\n    infinite: infinite,\n    containerClass: \"container-with-dots\",\n    itemClass: itemClass,\n    deviceType: deviceType,\n    autoPlay: autoPlay,\n    autoPlaySpeed: 3000,\n    renderButtonGroupOutside: true,\n    additionalTransfrom: 0,\n    customButtonGroup: __jsx(ButtonGroup, null)\n  }, props), data.map(function (item, index) {\n    if (component) return component(item);\n    return __jsx(\"div\", {\n      style: {\n        padding: '0 15px',\n        overflow: 'hidden'\n      },\n      key: index\n    }, __jsx(\"a\", {\n      href: item.link,\n      style: {\n        display: 'flex',\n        cursor: 'pointer'\n      }\n    }, __jsx(\"img\", {\n      key: item.id,\n      src: item.imgSrc,\n      alt: item.alt,\n      style: {\n        width: '100%',\n        height: '100%',\n        display: 'block',\n        position: 'relative'\n      }\n    })));\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}