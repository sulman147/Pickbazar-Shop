{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext, useEffect, useRef } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport Button from 'components/Button/Button';\nimport InputIncDec from 'components/InputIncDec/InputIncDec';\nimport { ProductDetailsWrapper, ProductPreview, ProductInfo, BookTitle, BackButton, AuthorName, BookDescriptionWrapper, BookDescription, BookMetaTable, BookMetaTableRow, BookMetaItem, ProductMeta, ProductCartWrapper, ProductPriceWrapper, ProductPrice, SalePrice, ProductCartBtn, MetaSingle, MetaItem, DetailsWrapper, DetailsTitle, Description, Avatar, SocialNetworks, SocialIcon, RelatedItems } from './ProductDetailsBook.style';\nimport { LongArrowLeft, CartIcon, InkPen, AdobeIcon, Facebook, GooglePlus, Twitter, Linkedin } from 'components/AllSvgIcon';\nimport { CartContext } from 'contexts/cart/cart.context';\nimport { CURRENCY } from 'helper/constant';\nimport { findProductIndex, getProductQuantity } from 'helper/utility';\nimport Products from 'containers/Products/ProductsBook';\nimport { FormattedMessage } from 'react-intl';\n\nconst ProductDetails = ({\n  product,\n  deviceType\n}) => {\n  const {\n    add,\n    update,\n    products\n  } = useContext(CartContext);\n  const data = product;\n  const index = findProductIndex(products, data.id);\n  const quantity = getProductQuantity(products, index);\n  const scrollRef = useRef(null);\n\n  const scrollToDiv = e => {\n    e.preventDefault(); // scrollRef.current.scrollIntoView({ behavior: 'smooth' });\n\n    window.scrollTo({\n      top: scrollRef.current.getBoundingClientRect().top + window.pageYOffset - 65,\n      behavior: 'smooth'\n    });\n  };\n\n  const handleClick = e => {\n    e.stopPropagation();\n    add(e, data);\n  };\n\n  const handleUpdate = (value, e) => {\n    if (index === -1 && value === 1) {\n      add(e, data);\n    } else {\n      update(data.id, value);\n    }\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      window.scrollTo(0, 0);\n    }, 500);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(ProductDetailsWrapper, {\n    className: \"product-card\"\n  }, __jsx(ProductPreview, null, __jsx(BackButton, null, __jsx(Button, {\n    title: \"Back\",\n    intlButtonId: \"backBtn\",\n    iconPosition: \"left\",\n    size: \"small\",\n    style: {\n      backgroundColor: '#ffffff',\n      border: '1px solid #f1f1f1',\n      color: '#77798c'\n    },\n    icon: __jsx(LongArrowLeft, null),\n    onClick: Router.back\n  })), __jsx(\"img\", {\n    src: product.gallery[0].url,\n    alt: product.title,\n    className: \"product-image\"\n  })), __jsx(ProductInfo, null, __jsx(BookTitle, null, product.title), __jsx(AuthorName, null, __jsx(InkPen, null), \" \", product.author.name), __jsx(BookDescriptionWrapper, null, __jsx(BookDescription, null, product.description.substring(0, 600), __jsx(\"a\", {\n    href: \"#\",\n    onClick: scrollToDiv,\n    style: {\n      color: '#009e7f',\n      fontWeight: 700\n    }\n  }, \"Read More\")), __jsx(BookMetaTable, null, product.meta ? Object.entries(product.meta).map(([item], i, arr) => i !== arr.length - 1 && i !== arr.length - 2 ? __jsx(BookMetaTableRow, {\n    key: i\n  }, __jsx(BookMetaItem, null, item.replace(/^[a-z]|[A-Z]/g, function (v, i) {\n    return i === 0 ? v.toUpperCase() : ' ' + v.toLowerCase();\n  })), __jsx(BookMetaItem, null, item === 'languages' ? product.meta[item].map((lang, i, arr) => lang.charAt(0).toUpperCase() + lang.slice(1) + (i !== arr.length - 1 ? ', ' : '')) : product.meta[item])) : '') : '')), __jsx(ProductCartWrapper, null, __jsx(ProductPriceWrapper, null, product.discountInPercent ? __jsx(SalePrice, null, CURRENCY, product.price) : '', __jsx(ProductPrice, null, CURRENCY, product.salePrice ? product.salePrice : product.price)), __jsx(ProductCartBtn, null, quantity <= 0 ? __jsx(Button, {\n    title: \"Add to Cart\",\n    intlButtonId: \"addToCartButton\",\n    iconPosition: \"left\",\n    size: \"small\",\n    className: \"cart-button\",\n    icon: __jsx(CartIcon, null),\n    onClick: e => handleClick(e)\n  }) : __jsx(InputIncDec, {\n    value: quantity,\n    onClick: e => {\n      e.stopPropagation(onclick);\n    },\n    onUpdate: (value, e) => handleUpdate(value, e)\n  }), product.meta && product.meta.samplePDF.length !== 0 ? __jsx(Button, {\n    title: \"Read Free Sample\",\n    intlButtonId: \"readFreeSampleButton\",\n    iconPosition: \"left\",\n    size: \"small\",\n    variant: \"outlined\",\n    className: \"outline-button\",\n    icon: __jsx(AdobeIcon, null)\n  }) : '')), __jsx(ProductMeta, null, __jsx(MetaSingle, null, product.categories ? product.categories.map(item => __jsx(Link, {\n    href: `/${product.type}?category=${item.slug}`,\n    key: `link-${item.id}`\n  }, __jsx(\"a\", null, __jsx(MetaItem, null, item.title)))) : '')))), __jsx(DetailsWrapper, {\n    ref: scrollRef\n  }, __jsx(DetailsTitle, null, __jsx(FormattedMessage, {\n    id: \"bookSectionTitle\",\n    defaultMessage: \"About The Book\"\n  })), __jsx(Description, null, product.description)), __jsx(DetailsWrapper, null, __jsx(DetailsTitle, null, __jsx(FormattedMessage, {\n    id: \"authorSectionTitle\",\n    defaultMessage: \"About The Author\"\n  })), __jsx(AuthorName, null, product.author.avatar && product.author.avatar.length !== 0 ? __jsx(Avatar, null, __jsx(\"img\", {\n    src: product.author.avatar,\n    alt: product.author.name\n  })) : __jsx(InkPen, null), product.author.name), __jsx(Description, null, product.author.bio), __jsx(SocialNetworks, null, product.author && product.author.socials.map(item => item.profileLink.length !== 0 ? __jsx(SocialIcon, null, __jsx(\"a\", {\n    key: item.id,\n    href: item.profileLink,\n    target: \"_blank\"\n  }, item.media === 'facebook' ? __jsx(Facebook, {\n    color: \"#3b5999\"\n  }) : item.media === 'twitter' ? __jsx(Twitter, {\n    color: \"#55acee\"\n  }) : item.media === 'google' ? __jsx(GooglePlus, {\n    color: \"#dd4b39\"\n  }) : item.media === 'linkedin' ? __jsx(Linkedin, {\n    color: \"#0077B5\"\n  }) : '')) : ''))), __jsx(RelatedItems, null, __jsx(\"h2\", null, __jsx(FormattedMessage, {\n    id: \"intlReletedItems\",\n    defaultMessage: \"Related Items\"\n  })), __jsx(Products, {\n    type: product.type.toLowerCase(),\n    deviceType: deviceType,\n    loadMore: false,\n    fetchLimit: 10\n  })));\n};\n\nexport default ProductDetails;","map":null,"metadata":{},"sourceType":"module"}