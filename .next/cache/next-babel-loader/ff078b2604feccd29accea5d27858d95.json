{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation applyCoupon($code: String!) {\\n    applyCoupon(code: $code) {\\n      id\\n      code\\n      discountInPercent\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport gql from 'graphql-tag';\nimport Button from 'components/Button/Button';\nimport RadioCard from 'components/RadioCard/RadioCard';\nimport RadioGroup from 'components/RadioGroup/RadioGroup';\nimport PaymentGroup from 'components/PaymentGroup/PaymentGroup';\nimport Loader from 'components/Loader/Loader';\nimport UpdateAddress from './Update/UpdateAddress';\nimport UpdateContact from './Update/UpdateContact';\nimport StripePaymentForm from '../Payment/StripePaymentForm';\nimport { DELETE_ADDRESS } from 'graphql/mutation/address';\nimport { DELETE_CARD } from 'graphql/mutation/card';\nimport { DELETE_CONTACT } from 'graphql/mutation/contact';\nimport { openModal } from '@redq/reuse-modal';\nimport { useMutation } from '@apollo/react-hooks';\nimport { CartContext } from 'contexts/cart/cart.context';\nimport CheckcoutWrapper, { CheckoutContainer, OrderSummary, OrderSummaryItem, OrderLabel, OrderAmount, DeliverySchedule, Heading, DeliveryAddress, ButtonGroup, Contact, PaymentOption, CheckoutSubmit, CouponBoxWrapper, ErrorMsg } from './Checkout.style';\nimport { getCartProducts, getSubTotalPrice, getTotalPrice, getDiscount, getCoupon } from '../../helper/utility';\nimport CouponBox, { CouponDisplay } from 'components/CouponBox/CouponBox';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage } from 'react-intl'; // The type of props Checkout Form receives\n\nvar APPLY_COUPON = gql(_templateObject());\n\nvar Checkout = function Checkout(_ref) {\n  var token = _ref.token,\n      deviceType = _ref.deviceType;\n\n  var _useState = useState(''),\n      couponCode = _useState[0],\n      setCouponCode = _useState[1];\n\n  var _useState2 = useState(''),\n      couponError = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(getDiscount()),\n      processedDiscount = _useState3[0],\n      setProcessedDiscount = _useState3[1];\n\n  var _useState4 = useState(getCoupon()),\n      processedCoupon = _useState4[0],\n      setProcessedCoupon = _useState4[1];\n\n  var _useContext = useContext(ProfileContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var _useContext2 = useContext(CartContext),\n      removeCoupon = _useContext2.removeCoupon,\n      discount = _useContext2.discount,\n      coupon = _useContext2.coupon,\n      addCoupon = _useContext2.addCoupon,\n      clearCart = _useContext2.clearCart;\n\n  var _useState5 = useState(false),\n      loading = _useState5[0],\n      setLoading = _useState5[1];\n\n  var _useState6 = useState(false),\n      isValid = _useState6[0],\n      setIsValid = _useState6[1];\n\n  var address = state.address,\n      contact = state.contact,\n      card = state.card,\n      schedules = state.schedules;\n  var items = getCartProducts();\n  var subTotalPrice = getSubTotalPrice();\n  var totalPrice = getTotalPrice();\n\n  var _useMutation = useMutation(DELETE_CONTACT),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      deleteContactMutation = _useMutation2[0];\n\n  var _useMutation3 = useMutation(DELETE_ADDRESS),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      deleteAddressMutation = _useMutation4[0];\n\n  var _useMutation5 = useMutation(DELETE_CARD),\n      _useMutation6 = _slicedToArray(_useMutation5, 1),\n      deletePaymentCardMutation = _useMutation6[0];\n\n  var _useMutation7 = useMutation(APPLY_COUPON),\n      _useMutation8 = _slicedToArray(_useMutation7, 1),\n      applyedCoupon = _useMutation8[0];\n\n  var handleSubmit = function handleSubmit() {\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n\n            if (isValid) {\n              clearCart();\n              Router.push('/order-recived');\n            }\n\n            setLoading(false);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  useEffect(function () {\n    setProcessedDiscount(discount);\n    setProcessedCoupon(coupon);\n  }, [coupon]);\n  useEffect(function () {\n    if (totalPrice > 0 && items.length > 0 && address.length && contact.length && card.length && schedules.length) {\n      setIsValid(true);\n    }\n  }, [state]); // Add or edit modal\n\n  var handleModal = function handleModal(modalComponent) {\n    var modalProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var className = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'add-address-modal';\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: {\n        item: modalProps\n      }\n    });\n  };\n\n  var handleEditDelete = function handleEditDelete(item, type, name) {\n    var modalComponent;\n    return _regeneratorRuntime.async(function handleEditDelete$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(type === 'edit')) {\n              _context2.next = 5;\n              break;\n            }\n\n            modalComponent = name === 'address' ? UpdateAddress : UpdateContact;\n            handleModal(modalComponent, item);\n            _context2.next = 21;\n            break;\n\n          case 5:\n            _context2.t0 = name;\n            _context2.next = _context2.t0 === 'payment' ? 8 : _context2.t0 === 'contact' ? 12 : _context2.t0 === 'address' ? 16 : 20;\n            break;\n\n          case 8:\n            dispatch({\n              type: 'DELETE_CARD',\n              payload: item.id\n            });\n            _context2.next = 11;\n            return _regeneratorRuntime.awrap(deletePaymentCardMutation({\n              variables: {\n                cardId: _JSON$stringify(item.id)\n              }\n            }));\n\n          case 11:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 12:\n            dispatch({\n              type: 'DELETE_CONTACT',\n              payload: item.id\n            });\n            _context2.next = 15;\n            return _regeneratorRuntime.awrap(deleteContactMutation({\n              variables: {\n                contactId: _JSON$stringify(item.id)\n              }\n            }));\n\n          case 15:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 16:\n            dispatch({\n              type: 'DELETE_ADDRESS',\n              payload: item.id\n            });\n            _context2.next = 19;\n            return _regeneratorRuntime.awrap(deleteAddressMutation({\n              variables: {\n                addressId: _JSON$stringify(item.id)\n              }\n            }));\n\n          case 19:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 20:\n            return _context2.abrupt(\"return\", false);\n\n          case 21:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n\n  var handleApplyCoupon = function handleApplyCoupon() {\n    var _ref2, applyCoupon;\n\n    return _regeneratorRuntime.async(function handleApplyCoupon$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(applyedCoupon({\n              variables: {\n                code: couponCode\n              }\n            }));\n\n          case 2:\n            _ref2 = _context3.sent;\n            applyCoupon = _ref2.data.applyCoupon;\n\n            if (applyCoupon && applyCoupon.discountInPercent) {\n              addCoupon(applyCoupon);\n              setCouponCode('');\n            } else {\n              setError('Invalid Coupon');\n            }\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  };\n\n  var handleOnUpdate = function handleOnUpdate(couponCode) {\n    setCouponCode(couponCode);\n  };\n\n  return __jsx(\"form\", null, __jsx(CheckcoutWrapper, null, __jsx(CheckoutContainer, null, __jsx(OrderSummary, null, __jsx(OrderSummaryItem, {\n    style: {\n      marginBottom: 15\n    }\n  }, __jsx(OrderLabel, null, __jsx(FormattedMessage, {\n    id: \"subTotal\",\n    defaultMessage: \"Subtotal\"\n  }), \" (\", items.length, ' ', __jsx(FormattedMessage, {\n    id: \"itemsText\",\n    defaultMessage: \"items\"\n  }), \")\"), __jsx(OrderAmount, null, \"$\", subTotalPrice || 0)), __jsx(OrderSummaryItem, {\n    style: {\n      marginBottom: 30\n    }\n  }, __jsx(OrderLabel, null, __jsx(FormattedMessage, {\n    id: \"shippinFeeText\",\n    defaultMessage: \"Shipping Fee\"\n  })), __jsx(OrderAmount, null, \"$0\")), __jsx(OrderSummaryItem, {\n    style: {\n      marginBottom: 30\n    },\n    className: \"voucherWrapper\"\n  }, __jsx(OrderLabel, null, __jsx(FormattedMessage, {\n    id: \"voucherText\",\n    defaultMessage: \"Voucher\"\n  })), processedDiscount && processedCoupon.code !== 'DEFAULT_COUPON' ? __jsx(CouponDisplay, {\n    code: processedCoupon.code,\n    sign: \"-\",\n    currency: \"$\",\n    price: discount,\n    onClick: function onClick(e) {\n      e.preventDefault();\n      removeCoupon();\n    }\n  }) : __jsx(React.Fragment, null, __jsx(CouponBoxWrapper, null, __jsx(CouponBox, {\n    buttonTitle: \"Apply\",\n    intlCouponBoxPlaceholder: \"couponPlaceholder\",\n    onClick: handleApplyCoupon,\n    value: couponCode,\n    onUpdate: handleOnUpdate,\n    style: {\n      maxWidth: 350,\n      height: 50\n    },\n    intlCouponApplyButton: \"voucherApply\"\n  }), couponError && __jsx(ErrorMsg, null, __jsx(FormattedMessage, {\n    id: \"couponError\",\n    defaultMessage: couponError\n  }))))), __jsx(OrderSummaryItem, null, __jsx(OrderLabel, null, __jsx(FormattedMessage, {\n    id: \"totalText\",\n    defaultMessage: \"Total\"\n  })), __jsx(OrderAmount, null, \"$\", totalPrice))), __jsx(DeliverySchedule, null, __jsx(Heading, null, __jsx(FormattedMessage, {\n    id: \"deliverySchedule\",\n    defaultMessage: \"Select Your Delivery Schedule\"\n  })), __jsx(RadioGroup, {\n    items: schedules,\n    component: function component(item) {\n      return __jsx(RadioCard, {\n        id: item.id,\n        key: item.id,\n        title: item.title,\n        content: item.time_slot,\n        name: \"schedule\",\n        checked: item.type === 'primary',\n        withActionButtons: false,\n        onChange: function onChange() {\n          return dispatch({\n            type: 'SET_PRIMARY_SCHEDULE',\n            payload: item.id.toString()\n          });\n        }\n      });\n    }\n  })), __jsx(DeliveryAddress, null, __jsx(Heading, null, __jsx(FormattedMessage, {\n    id: \"checkoutDeliveryAddress\",\n    defaultMessage: \"Select Your Delivery Address\"\n  })), __jsx(ButtonGroup, null, __jsx(RadioGroup, {\n    items: address,\n    component: function component(item) {\n      return __jsx(RadioCard, {\n        id: item.id,\n        key: item.id,\n        title: item.name,\n        content: item.info,\n        name: \"address\",\n        checked: item.type === 'primary',\n        onChange: function onChange() {\n          return dispatch({\n            type: 'SET_PRIMARY_ADDRESS',\n            payload: item.id.toString()\n          });\n        },\n        onEdit: function onEdit() {\n          return handleEditDelete(item, 'edit', 'address');\n        },\n        onDelete: function onDelete() {\n          return handleEditDelete(item, 'delete', 'address');\n        }\n      });\n    },\n    secondaryComponent: __jsx(Button, {\n      title: \"Add Adderss\",\n      iconPosition: \"right\",\n      colors: \"primary\",\n      size: \"small\",\n      variant: \"outlined\",\n      type: \"button\",\n      intlButtonId: \"addAddressBtn\",\n      onClick: function onClick() {\n        return handleModal(UpdateAddress, 'add-address-modal');\n      }\n    })\n  }))), __jsx(Contact, null, __jsx(Heading, null, __jsx(FormattedMessage, {\n    id: \"contactNumberText\",\n    defaultMessage: \"Select Your Contact Number\"\n  })), __jsx(ButtonGroup, null, __jsx(RadioGroup, {\n    items: contact,\n    component: function component(item) {\n      return __jsx(RadioCard, {\n        id: item.id,\n        key: item.id,\n        title: item.type,\n        content: item.number,\n        checked: item.type === 'primary',\n        onChange: function onChange() {\n          return dispatch({\n            type: 'SET_PRIMARY_CONTACT',\n            payload: item.id.toString()\n          });\n        },\n        name: \"contact\",\n        onEdit: function onEdit() {\n          return handleEditDelete(item, 'edit', 'contact');\n        },\n        onDelete: function onDelete() {\n          return handleEditDelete(item, 'delete', 'contact');\n        }\n      });\n    },\n    secondaryComponent: __jsx(Button, {\n      title: \"Add Contact\",\n      iconPosition: \"right\",\n      colors: \"primary\",\n      size: \"small\",\n      variant: \"outlined\",\n      type: \"button\",\n      intlButtonId: \"addContactBtn\",\n      onClick: function onClick() {\n        return handleModal(UpdateContact, 'add-contact-modal');\n      }\n    })\n  }))), __jsx(PaymentOption, null, __jsx(Heading, null, __jsx(FormattedMessage, {\n    id: \"selectPaymentText\",\n    defaultMessage: \"Select Payment Option\"\n  })), __jsx(PaymentGroup, {\n    name: \"payment\",\n    deviceType: deviceType,\n    items: card,\n    onEditDeleteField: function onEditDeleteField(item, type) {\n      return handleEditDelete(item, type, 'payment');\n    },\n    onChange: function onChange(item) {\n      return dispatch({\n        type: 'SET_PRIMARY_CARD',\n        payload: item.id.toString()\n      });\n    },\n    handleAddNewCard: function handleAddNewCard() {\n      handleModal(StripePaymentForm, {\n        totalPrice: totalPrice\n      }, 'add-address-modal stripe-modal');\n    }\n  })), __jsx(CheckoutSubmit, null, __jsx(Button, {\n    onClick: handleSubmit,\n    type: \"button\",\n    disabled: !isValid,\n    title: \"Proceed to Checkout\" // size='small'\n    ,\n    intlButtonId: \"proceesCheckout\",\n    loader: __jsx(Loader, null),\n    isLoading: loading\n  })))));\n};\n\nexport default Checkout;","map":null,"metadata":{},"sourceType":"module"}