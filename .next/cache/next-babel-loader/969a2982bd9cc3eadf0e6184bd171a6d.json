{"ast":null,"code":"import { useState, useRef, useEffect } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\nexport function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => void (ref.current = value), [value]);\n  return ref.current;\n}\nexport function useMeasure() {\n  const ref = useRef();\n  const {\n    0: bounds,\n    1: set\n  } = useState({\n    left: 0,\n    top: 0,\n    width: 0,\n    height: 0\n  });\n  const {\n    0: ro\n  } = useState(() => new ResizeObserver(([entry]) => set(entry.contentRect)));\n  useEffect(() => {\n    if (ref.current) ro.observe(ref.current);\n    return () => ro.disconnect();\n  }, []);\n  return [{\n    ref\n  }, bounds];\n}","map":null,"metadata":{},"sourceType":"module"}