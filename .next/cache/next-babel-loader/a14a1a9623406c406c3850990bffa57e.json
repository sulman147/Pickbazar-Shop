{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { LinkButton, Button, Wrapper, Container, Heading, SubHeading, OfferSection, Offer, Input, Divider } from './SignInOutForm.style';\nimport { Facebook, Google } from 'components/AllSvgIcon';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport { FormattedMessage } from 'react-intl';\nimport { closeModal } from '@redq/reuse-modal';\nexport default function SignInModal() {\n  var _useContext = useContext(AuthContext),\n      authDispatch = _useContext.authDispatch;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      email = _React$useState2[0],\n      setEmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      password = _React$useState4[0],\n      setPassword = _React$useState4[1];\n\n  var toggleSignUpForm = function toggleSignUpForm() {\n    authDispatch({\n      type: 'SIGNUP'\n    });\n  };\n\n  var toggleForgotPassForm = function toggleForgotPassForm() {\n    authDispatch({\n      type: 'FORGOTPASS'\n    });\n  };\n\n  var loginCallback = function loginCallback() {\n    if (true) {\n      localStorage.setItem('access_token', \"\".concat(email, \".\").concat(password));\n      authDispatch({\n        type: 'SIGNIN_SUCCESS'\n      });\n      closeModal();\n    }\n  };\n\n  return __jsx(Wrapper, null, __jsx(Container, null, __jsx(Heading, null, __jsx(FormattedMessage, {\n    id: \"welcomeBack\",\n    defaultMessage: \"Welcome Back\"\n  })), __jsx(SubHeading, null, __jsx(FormattedMessage, {\n    id: \"loginText\",\n    defaultMessage: \"Login with your email & password\"\n  })), __jsx(\"form\", {\n    onSubmit: loginCallback\n  }, __jsx(FormattedMessage, {\n    id: \"emailAddressPlaceholder\",\n    defaultMessage: \"Email Address.\"\n  }, function (placeholder) {\n    return __jsx(Input, {\n      type: \"email\",\n      placeholder: placeholder,\n      value: email,\n      onChange: function onChange(e) {\n        return setEmail(e.target.value);\n      },\n      required: true\n    });\n  }), __jsx(FormattedMessage, {\n    id: \"passwordPlaceholder\",\n    defaultMessage: \"Password (min 6 characters)\"\n  }, function (placeholder) {\n    return __jsx(Input, {\n      type: \"password\",\n      placeholder: placeholder,\n      value: password,\n      onChange: function onChange(e) {\n        return setPassword(e.target.value);\n      },\n      required: true\n    });\n  }), __jsx(Button, {\n    fullwidth: true,\n    title: 'Continue',\n    intlButtonId: \"continueBtn\",\n    type: \"submit\",\n    style: {\n      color: '#fff'\n    }\n  })), __jsx(Divider, null, __jsx(\"span\", null, __jsx(FormattedMessage, {\n    id: \"orText\",\n    defaultMessage: \"or\"\n  }))), __jsx(Button, {\n    fullwidth: true,\n    title: 'Continue with Facebook',\n    className: \"facebook\",\n    icon: __jsx(Facebook, null),\n    iconPosition: \"left\",\n    iconStyle: {\n      color: '#ffffff',\n      marginRight: 5\n    },\n    intlButtonId: \"continueFacebookBtn\",\n    onClick: loginCallback,\n    style: {\n      color: '#fff'\n    }\n  }), __jsx(Button, {\n    fullwidth: true,\n    title: 'Continue with Google',\n    className: \"google\",\n    icon: __jsx(Google, null),\n    iconPosition: \"left\",\n    iconStyle: {\n      color: '#ffffff',\n      marginRight: 5\n    },\n    intlButtonId: \"continueGoogleBtn\",\n    onClick: loginCallback,\n    style: {\n      color: '#fff'\n    }\n  }), __jsx(Offer, {\n    style: {\n      padding: '20px 0'\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"dontHaveAccount\",\n    defaultMessage: \"Don't have any account?\"\n  }), ' ', __jsx(LinkButton, {\n    onClick: toggleSignUpForm\n  }, __jsx(FormattedMessage, {\n    id: \"signUpBtnText\",\n    defaultMessage: \"Sign Up\"\n  })))), __jsx(OfferSection, null, __jsx(Offer, null, __jsx(FormattedMessage, {\n    id: \"forgotPasswordText\",\n    defaultMessage: \"Forgot your password?\"\n  }), ' ', __jsx(LinkButton, {\n    onClick: toggleForgotPassForm\n  }, __jsx(FormattedMessage, {\n    id: \"resetText\",\n    defaultMessage: \"Reset It\"\n  })))));\n}","map":null,"metadata":{},"sourceType":"module"}