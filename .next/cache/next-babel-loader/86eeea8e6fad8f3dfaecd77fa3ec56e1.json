{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport Router from 'next/router';\nimport { closeModal } from '@redq/reuse-modal';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport Button from 'components/Button/Button';\nimport InputIncDec from 'components/InputIncDec/InputIncDec';\nimport { QuickViewWrapper, ProductDetailsWrapper, ProductPreview, DiscountPercent, ProductInfoWrapper, ProductInfo, ProductTitle, ProductWeight, ProductDescription, ProductMeta, ProductCartWrapper, ProductPriceWrapper, ProductPrice, SalePrice, ProductCartBtn, MetaSingle, MetaItem, ModalClose } from './QuickView.style';\nimport { CURRENCY } from 'helper/constant';\nimport { CloseIcon, CartIcon } from 'components/AllSvgIcon';\nimport { CartContext } from 'contexts/cart/cart.context';\nimport { findProductIndex, getProductQuantity } from 'helper/utility';\nimport ReadMore from 'components/Truncate/Truncate';\nimport CarouselWithCustomDots from 'components/MultiCarousel/MultiCarousel';\nimport LanguageContext from 'contexts/language/language.context';\n\nvar QuickView = function QuickView(_ref) {\n  var modalProps = _ref.modalProps,\n      deviceType = _ref.deviceType,\n      onModalClose = _ref.onModalClose;\n\n  var _useContext = useContext(CartContext),\n      add = _useContext.add,\n      update = _useContext.update,\n      products = _useContext.products;\n\n  var id = modalProps.id,\n      type = modalProps.type,\n      title = modalProps.title,\n      unit = modalProps.unit,\n      price = modalProps.price,\n      discountInPercent = modalProps.discountInPercent,\n      salePrice = modalProps.salePrice,\n      description = modalProps.description,\n      gallery = modalProps.gallery,\n      categories = modalProps.categories;\n\n  var _useContext2 = useContext(LanguageContext),\n      lang = _useContext2.state.lang;\n\n  var index = findProductIndex(products, id);\n  var quantity = getProductQuantity(products, index);\n\n  var handleClick = function handleClick(e) {\n    e.stopPropagation();\n    add(e, modalProps);\n  };\n\n  var handleUpdate = function handleUpdate(value, e) {\n    if (index === -1 && value === 1) {\n      add(e, modalProps);\n    } else {\n      update(id, value);\n    }\n  };\n\n  function onCategoryClick(slug) {\n    Router.push({\n      pathname: \"/\".concat(type.toLowerCase()),\n      query: {\n        category: slug\n      }\n    }).then(function () {\n      return window.scrollTo(0, 0);\n    });\n    closeModal();\n  }\n\n  return __jsx(React.Fragment, null, __jsx(ModalClose, {\n    onClick: onModalClose\n  }, __jsx(CloseIcon, null)), __jsx(QuickViewWrapper, null, __jsx(ProductDetailsWrapper, {\n    className: \"product-card\",\n    dir: \"ltr\"\n  }, lang === 'ar' || lang === 'he' ? '' : __jsx(ProductPreview, null, __jsx(CarouselWithCustomDots, {\n    items: gallery,\n    deviceType: deviceType\n  }), !!discountInPercent && __jsx(React.Fragment, null, __jsx(DiscountPercent, null, discountInPercent, \"%\"))), __jsx(ProductInfoWrapper, {\n    dir: lang === 'ar' || lang === 'he' ? 'rtl' : 'ltr'\n  }, __jsx(Scrollbars, {\n    universal: true,\n    autoHide: true,\n    autoHeight: true,\n    autoHeightMax: \"90vh\"\n  }, __jsx(ProductInfo, null, __jsx(ProductTitle, null, title), __jsx(ProductWeight, null, unit), __jsx(ProductDescription, null, __jsx(ReadMore, {\n    character: 600\n  }, description)), __jsx(ProductCartWrapper, null, __jsx(ProductPriceWrapper, null, discountInPercent ? __jsx(SalePrice, null, CURRENCY, price) : '', __jsx(ProductPrice, null, CURRENCY, salePrice ? salePrice : price)), __jsx(ProductCartBtn, null, quantity <= 0 ? __jsx(Button, {\n    title: \"Cart\",\n    intlButtonId: \"addCartButton\",\n    iconPosition: \"left\",\n    colors: \"primary\",\n    size: \"small\",\n    variant: \"outlined\",\n    className: \"cart-button\",\n    icon: __jsx(CartIcon, null),\n    onClick: function onClick(e) {\n      return handleClick(e);\n    }\n  }) : __jsx(InputIncDec, {\n    value: quantity,\n    onUpdate: function onUpdate(value, e) {\n      return handleUpdate(value, e);\n    }\n  }))), __jsx(ProductMeta, null, __jsx(MetaSingle, null, categories ? categories.map(function (item) {\n    return __jsx(MetaItem, {\n      onClick: function onClick() {\n        return onCategoryClick(item.slug);\n      },\n      key: item.id\n    }, item.title);\n  }) : ''))))), lang === 'ar' || lang === 'he' ? __jsx(ProductPreview, null, __jsx(CarouselWithCustomDots, {\n    items: gallery,\n    deviceType: deviceType\n  }), !!discountInPercent && __jsx(React.Fragment, null, __jsx(DiscountPercent, null, discountInPercent, \"%\"))) : '')));\n};\n\nexport default QuickView;","map":null,"metadata":{},"sourceType":"module"}