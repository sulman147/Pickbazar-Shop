{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"E:\\\\React Web Work\\\\pickbazar\\\\packages\\\\shop\\\\containers\\\\Sidebar\\\\Sidebar.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getCategories($type: String!) {\\n    categories(type: $type) {\\n      id\\n      title\\n      slug\\n      icon\\n      children {\\n        id\\n        title\\n        slug\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport Sticky from 'react-stickynode';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport Popover from 'components/Popover/Popover';\nimport CategoryDropdown from 'components/CategoryDropdown/SpringDropdown';\nimport { ArrowDropDown, CategoryIcon } from 'components/AllSvgIcon';\nimport { SearchContext } from 'contexts/search/search.context';\nimport { useStickyState } from 'contexts/app/app.provider';\nimport { SidebarMobileLoader, SidebarLoader } from 'components/Placeholder/Placeholder';\nimport { CategoryWrapper, PopoverHandler, PopoverWrapper, SidebarWrapper } from './Sidebar.style';\nimport { Accessories, BathOil, BeautyHealth, Beverage, Breakfast, Cooking, Dairy, Deodorent, Eyes, Face, FacialCare, FruitsVegetable, HandBags, HomeCleaning, LaptopBags, Lips, MeatFish, OralCare, OuterWear, Pants, PetCare, Purse, ShavingNeeds, Shirts, ShoulderBags, Skirts, Snacks, Tops, Wallet, WomenDress } from 'components/AllSvgIcon';\nvar GET_CATEGORIES = gql(_templateObject());\nvar iconTypes = {\n  Accessories: Accessories,\n  BathOil: BathOil,\n  BeautyHealth: BeautyHealth,\n  Beverage: Beverage,\n  Breakfast: Breakfast,\n  Cooking: Cooking,\n  Dairy: Dairy,\n  Deodorent: Deodorent,\n  Eyes: Eyes,\n  Face: Face,\n  FacialCare: FacialCare,\n  FruitsVegetable: FruitsVegetable,\n  HandBags: HandBags,\n  HomeCleaning: HomeCleaning,\n  LaptopBags: LaptopBags,\n  Lips: Lips,\n  MeatFish: MeatFish,\n  OralCare: OralCare,\n  OuterWear: OuterWear,\n  Pants: Pants,\n  PetCare: PetCare,\n  Purse: Purse,\n  ShavingNeeds: ShavingNeeds,\n  Shirts: Shirts,\n  ShoulderBags: ShoulderBags,\n  Skirts: Skirts,\n  Snacks: Snacks,\n  Tops: Tops,\n  Wallet: Wallet,\n  WomenDress: WomenDress\n};\n\nvar SidebarCategory = function SidebarCategory(_ref) {\n  var _ref$deviceType = _ref.deviceType,\n      mobile = _ref$deviceType.mobile,\n      tablet = _ref$deviceType.tablet,\n      desktop = _ref$deviceType.desktop,\n      type = _ref.type;\n\n  var _useContext = useContext(SearchContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var router = useRouter();\n  var pathname = router.pathname;\n\n  var _useQuery = useQuery(GET_CATEGORIES, {\n    variables: {\n      type: type\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading;\n\n  var selectedQueries = state && state.category && state.category.split(',');\n\n  var _handleCategorySelection = function handleCategorySelection(slug) {\n    dispatch({\n      type: 'UPDATE',\n      payload: _objectSpread({}, state, {\n        page: 1,\n        category: \"\".concat(slug)\n      })\n    });\n\n    var page = state.page,\n        urlState = _objectWithoutProperties(state, [\"page\"]);\n\n    router.push({\n      pathname: pathname,\n      query: _objectSpread({}, urlState, {\n        category: slug\n      })\n    }, {\n      pathname: pathname === '/' ? \"\".concat(pathname).concat(type) : pathname,\n      query: _objectSpread({}, urlState, {\n        category: slug\n      })\n    }, {\n      shallow: true\n    });\n  };\n\n  var isSidebarSticky = useStickyState('isSidebarSticky');\n\n  if (!data || loading) {\n    if (mobile || tablet) {\n      return __jsx(SidebarMobileLoader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      });\n    }\n\n    return __jsx(SidebarLoader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    });\n  }\n\n  return __jsx(CategoryWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, (mobile || tablet) && __jsx(Popover, {\n    handler: __jsx(PopoverHandler, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, __jsx(CategoryIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), \"Select your Category\"), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, __jsx(ArrowDropDown, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }))),\n    className: \"category-popover\",\n    content: __jsx(React.Fragment, null, __jsx(CategoryDropdown, {\n      items: data.categories,\n      iconList: iconTypes,\n      handleCategorySelection: function handleCategorySelection(slug) {\n        return _handleCategorySelection(slug);\n      },\n      selectedQueries: selectedQueries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }), desktop && __jsx(React.Fragment, null, __jsx(PopoverWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, __jsx(Popover, {\n    handler: __jsx(PopoverHandler, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, __jsx(CategoryIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), \"Select your Category\"), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, __jsx(ArrowDropDown, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }))),\n    className: \"category-popover\",\n    content: __jsx(React.Fragment, null, __jsx(CategoryDropdown, {\n      items: data.categories,\n      iconList: iconTypes,\n      handleCategorySelection: function handleCategorySelection(slug) {\n        return _handleCategorySelection(slug);\n      },\n      selectedQueries: selectedQueries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  })), __jsx(SidebarWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, __jsx(Sticky, {\n    enabled: isSidebarSticky,\n    top: 110,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, __jsx(Scrollbars, {\n    universal: true,\n    autoHide: true,\n    autoHeight: true,\n    autoHeightMax: 688,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, __jsx(CategoryDropdown, {\n    items: data.categories,\n    iconList: iconTypes,\n    handleCategorySelection: function handleCategorySelection(id) {\n      return _handleCategorySelection(id);\n    },\n    selectedQueries: selectedQueries,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }))))));\n};\n\nexport default SidebarCategory;","map":{"version":3,"sources":["E:/React Web Work/pickbazar/packages/shop/containers/Sidebar/Sidebar.tsx"],"names":["React","useContext","useRouter","useQuery","gql","Sticky","Scrollbars","Popover","CategoryDropdown","ArrowDropDown","CategoryIcon","SearchContext","useStickyState","SidebarMobileLoader","SidebarLoader","CategoryWrapper","PopoverHandler","PopoverWrapper","SidebarWrapper","Accessories","BathOil","BeautyHealth","Beverage","Breakfast","Cooking","Dairy","Deodorent","Eyes","Face","FacialCare","FruitsVegetable","HandBags","HomeCleaning","LaptopBags","Lips","MeatFish","OralCare","OuterWear","Pants","PetCare","Purse","ShavingNeeds","Shirts","ShoulderBags","Skirts","Snacks","Tops","Wallet","WomenDress","GET_CATEGORIES","iconTypes","SidebarCategory","deviceType","mobile","tablet","desktop","type","state","dispatch","router","pathname","variables","data","loading","selectedQueries","category","split","handleCategorySelection","slug","payload","page","urlState","push","query","shallow","isSidebarSticky","categories","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,gBAAP,MAA6B,4CAA7B;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,uBAA5C;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SACEC,mBADF,EAEEC,aAFF,QAGO,oCAHP;AAKA,SACEC,eADF,EAEEC,cAFF,EAGEC,cAHF,EAIEC,cAJF,QAMO,iBANP;AAOA,SACEC,WADF,EAEEC,OAFF,EAGEC,YAHF,EAIEC,QAJF,EAKEC,SALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,SARF,EASEC,IATF,EAUEC,IAVF,EAWEC,UAXF,EAYEC,eAZF,EAaEC,QAbF,EAcEC,YAdF,EAeEC,UAfF,EAgBEC,IAhBF,EAiBEC,QAjBF,EAkBEC,QAlBF,EAmBEC,SAnBF,EAoBEC,KApBF,EAqBEC,OArBF,EAsBEC,KAtBF,EAuBEC,YAvBF,EAwBEC,MAxBF,EAyBEC,YAzBF,EA0BEC,MA1BF,EA2BEC,MA3BF,EA4BEC,IA5BF,EA6BEC,MA7BF,EA8BEC,UA9BF,QA+BO,uBA/BP;AAiCA,IAAMC,cAAc,GAAG7C,GAAH,mBAApB;AAgBA,IAAI8C,SAAS,GAAG;AACd/B,EAAAA,WAAW,EAAEA,WADC;AAEdC,EAAAA,OAAO,EAAEA,OAFK;AAGdC,EAAAA,YAAY,EAAEA,YAHA;AAIdC,EAAAA,QAAQ,EAAEA,QAJI;AAKdC,EAAAA,SAAS,EAAEA,SALG;AAMdC,EAAAA,OAAO,EAAEA,OANK;AAOdC,EAAAA,KAAK,EAAEA,KAPO;AAQdC,EAAAA,SAAS,EAAEA,SARG;AASdC,EAAAA,IAAI,EAAEA,IATQ;AAUdC,EAAAA,IAAI,EAAEA,IAVQ;AAWdC,EAAAA,UAAU,EAAEA,UAXE;AAYdC,EAAAA,eAAe,EAAEA,eAZH;AAadC,EAAAA,QAAQ,EAAEA,QAbI;AAcdC,EAAAA,YAAY,EAAEA,YAdA;AAedC,EAAAA,UAAU,EAAEA,UAfE;AAgBdC,EAAAA,IAAI,EAAEA,IAhBQ;AAiBdC,EAAAA,QAAQ,EAAEA,QAjBI;AAkBdC,EAAAA,QAAQ,EAAEA,QAlBI;AAmBdC,EAAAA,SAAS,EAAEA,SAnBG;AAoBdC,EAAAA,KAAK,EAAEA,KApBO;AAqBdC,EAAAA,OAAO,EAAEA,OArBK;AAsBdC,EAAAA,KAAK,EAAEA,KAtBO;AAuBdC,EAAAA,YAAY,EAAEA,YAvBA;AAwBdC,EAAAA,MAAM,EAAEA,MAxBM;AAyBdC,EAAAA,YAAY,EAAEA,YAzBA;AA0BdC,EAAAA,MAAM,EAAEA,MA1BM;AA2BdC,EAAAA,MAAM,EAAEA,MA3BM;AA4BdC,EAAAA,IAAI,EAAEA,IA5BQ;AA6BdC,EAAAA,MAAM,EAAEA,MA7BM;AA8BdC,EAAAA,UAAU,EAAEA;AA9BE,CAAhB;;AA0CA,IAAMG,eAA+C,GAAG,SAAlDA,eAAkD,OAGlD;AAAA,6BAFJC,UAEI;AAAA,MAFUC,MAEV,mBAFUA,MAEV;AAAA,MAFkBC,MAElB,mBAFkBA,MAElB;AAAA,MAF0BC,OAE1B,mBAF0BA,OAE1B;AAAA,MADJC,IACI,QADJA,IACI;;AAAA,oBACwBvD,UAAU,CAACU,aAAD,CADlC;AAAA,MACI8C,KADJ,eACIA,KADJ;AAAA,MACWC,QADX,eACWA,QADX;;AAEJ,MAAMC,MAAM,GAAGzD,SAAS,EAAxB;AAFI,MAGI0D,QAHJ,GAGiBD,MAHjB,CAGIC,QAHJ;;AAAA,kBAIsBzD,QAAQ,CAAC8C,cAAD,EAAiB;AACjDY,IAAAA,SAAS,EAAE;AAAEL,MAAAA,IAAI,EAAJA;AAAF;AADsC,GAAjB,CAJ9B;AAAA,MAIIM,IAJJ,aAIIA,IAJJ;AAAA,MAIUC,OAJV,aAIUA,OAJV;;AAQJ,MAAMC,eAAe,GAAGP,KAAK,IAAIA,KAAK,CAACQ,QAAf,IAA2BR,KAAK,CAACQ,QAAN,CAAeC,KAAf,CAAqB,GAArB,CAAnD;;AACA,MAAMC,wBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,IAAD,EAAkB;AAChDV,IAAAA,QAAQ,CAAC;AACPF,MAAAA,IAAI,EAAE,QADC;AAEPa,MAAAA,OAAO,oBACFZ,KADE;AAELa,QAAAA,IAAI,EAAE,CAFD;AAGLL,QAAAA,QAAQ,YAAKG,IAAL;AAHH;AAFA,KAAD,CAAR;;AADgD,QASxCE,IATwC,GASlBb,KATkB,CASxCa,IATwC;AAAA,QAS/BC,QAT+B,4BASlBd,KATkB;;AAUhDE,IAAAA,MAAM,CAACa,IAAP,CACE;AACEZ,MAAAA,QAAQ,EAAEA,QADZ;AAEEa,MAAAA,KAAK,oBAAOF,QAAP;AAAiBN,QAAAA,QAAQ,EAAEG;AAA3B;AAFP,KADF,EAKE;AACER,MAAAA,QAAQ,EAAEA,QAAQ,KAAK,GAAb,aAAsBA,QAAtB,SAAiCJ,IAAjC,IAA0CI,QADtD;AAEEa,MAAAA,KAAK,oBAAOF,QAAP;AAAiBN,QAAAA,QAAQ,EAAEG;AAA3B;AAFP,KALF,EASE;AAAEM,MAAAA,OAAO,EAAE;AAAX,KATF;AAWD,GArBD;;AAsBA,MAAMC,eAAe,GAAG/D,cAAc,CAAC,iBAAD,CAAtC;;AAEA,MAAI,CAACkD,IAAD,IAASC,OAAb,EAAsB;AACpB,QAAIV,MAAM,IAAIC,MAAd,EAAsB;AACpB,aAAO,MAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,WAAO,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,SACE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACD,MAAM,IAAIC,MAAX,KACC,MAAC,OAAD;AACE,IAAA,OAAO,EACL,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,yBADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,CAFJ;AAYE,IAAA,SAAS,EAAC,kBAZZ;AAaE,IAAA,OAAO,EACL,4BACE,MAAC,gBAAD;AACE,MAAA,KAAK,EAAEQ,IAAI,CAACc,UADd;AAEE,MAAA,QAAQ,EAAE1B,SAFZ;AAGE,MAAA,uBAAuB,EAAE,iCAACkB,IAAD;AAAA,eACvBD,wBAAuB,CAACC,IAAD,CADA;AAAA,OAH3B;AAME,MAAA,eAAe,EAAEJ,eANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EA6BGT,OAAO,IACN,4BACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AACE,IAAA,OAAO,EACL,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,yBADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,CAFJ;AAYE,IAAA,SAAS,EAAC,kBAZZ;AAaE,IAAA,OAAO,EACL,4BACE,MAAC,gBAAD;AACE,MAAA,KAAK,EAAEO,IAAI,CAACc,UADd;AAEE,MAAA,QAAQ,EAAE1B,SAFZ;AAGE,MAAA,uBAAuB,EAAE,iCAACkB,IAAD;AAAA,eACvBD,wBAAuB,CAACC,IAAD,CADA;AAAA,OAH3B;AAME,MAAA,eAAe,EAAEJ,eANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EA8BE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEW,eAAjB;AAAkC,IAAA,GAAG,EAAE,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,SAAS,MAArB;AAAsB,IAAA,QAAQ,MAA9B;AAA+B,IAAA,UAAU,MAAzC;AAA0C,IAAA,aAAa,EAAE,GAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AACE,IAAA,KAAK,EAAEb,IAAI,CAACc,UADd;AAEE,IAAA,QAAQ,EAAE1B,SAFZ;AAGE,IAAA,uBAAuB,EAAE,iCAAC2B,EAAD;AAAA,aACvBV,wBAAuB,CAACU,EAAD,CADA;AAAA,KAH3B;AAME,IAAA,eAAe,EAAEb,eANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CA9BF,CA9BJ,CADF;AA+ED,CA1HD;;AA4HA,eAAeb,eAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport Sticky from 'react-stickynode';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport Popover from 'components/Popover/Popover';\nimport CategoryDropdown from 'components/CategoryDropdown/SpringDropdown';\nimport { ArrowDropDown, CategoryIcon } from 'components/AllSvgIcon';\nimport { SearchContext } from 'contexts/search/search.context';\nimport { useStickyState } from 'contexts/app/app.provider';\nimport {\n  SidebarMobileLoader,\n  SidebarLoader,\n} from 'components/Placeholder/Placeholder';\n\nimport {\n  CategoryWrapper,\n  PopoverHandler,\n  PopoverWrapper,\n  SidebarWrapper,\n  Loading,\n} from './Sidebar.style';\nimport {\n  Accessories,\n  BathOil,\n  BeautyHealth,\n  Beverage,\n  Breakfast,\n  Cooking,\n  Dairy,\n  Deodorent,\n  Eyes,\n  Face,\n  FacialCare,\n  FruitsVegetable,\n  HandBags,\n  HomeCleaning,\n  LaptopBags,\n  Lips,\n  MeatFish,\n  OralCare,\n  OuterWear,\n  Pants,\n  PetCare,\n  Purse,\n  ShavingNeeds,\n  Shirts,\n  ShoulderBags,\n  Skirts,\n  Snacks,\n  Tops,\n  Wallet,\n  WomenDress,\n} from 'components/AllSvgIcon';\n\nconst GET_CATEGORIES = gql`\n  query getCategories($type: String!) {\n    categories(type: $type) {\n      id\n      title\n      slug\n      icon\n      children {\n        id\n        title\n        slug\n      }\n    }\n  }\n`;\n\nlet iconTypes = {\n  Accessories: Accessories,\n  BathOil: BathOil,\n  BeautyHealth: BeautyHealth,\n  Beverage: Beverage,\n  Breakfast: Breakfast,\n  Cooking: Cooking,\n  Dairy: Dairy,\n  Deodorent: Deodorent,\n  Eyes: Eyes,\n  Face: Face,\n  FacialCare: FacialCare,\n  FruitsVegetable: FruitsVegetable,\n  HandBags: HandBags,\n  HomeCleaning: HomeCleaning,\n  LaptopBags: LaptopBags,\n  Lips: Lips,\n  MeatFish: MeatFish,\n  OralCare: OralCare,\n  OuterWear: OuterWear,\n  Pants: Pants,\n  PetCare: PetCare,\n  Purse: Purse,\n  ShavingNeeds: ShavingNeeds,\n  Shirts: Shirts,\n  ShoulderBags: ShoulderBags,\n  Skirts: Skirts,\n  Snacks: Snacks,\n  Tops: Tops,\n  Wallet: Wallet,\n  WomenDress: WomenDress,\n};\n\ntype SidebarCategoryProps = {\n  deviceType: {\n    mobile: string;\n    tablet: string;\n    desktop: boolean;\n  };\n  type: string;\n};\n\nconst SidebarCategory: React.FC<SidebarCategoryProps> = ({\n  deviceType: { mobile, tablet, desktop },\n  type,\n}) => {\n  const { state, dispatch } = useContext(SearchContext);\n  const router = useRouter();\n  const { pathname } = router;\n  const { data, loading } = useQuery(GET_CATEGORIES, {\n    variables: { type },\n  });\n\n  const selectedQueries = state && state.category && state.category.split(',');\n  const handleCategorySelection = (slug: string) => {\n    dispatch({\n      type: 'UPDATE',\n      payload: {\n        ...state,\n        page: 1,\n        category: `${slug}`,\n      },\n    });\n    const { page, ...urlState } = state;\n    router.push(\n      {\n        pathname: pathname,\n        query: { ...urlState, category: slug },\n      },\n      {\n        pathname: pathname === '/' ? `${pathname}${type}` : pathname,\n        query: { ...urlState, category: slug },\n      },\n      { shallow: true }\n    );\n  };\n  const isSidebarSticky = useStickyState('isSidebarSticky');\n\n  if (!data || loading) {\n    if (mobile || tablet) {\n      return <SidebarMobileLoader />;\n    }\n\n    return <SidebarLoader />;\n  }\n  return (\n    <CategoryWrapper>\n      {(mobile || tablet) && (\n        <Popover\n          handler={\n            <PopoverHandler>\n              <div>\n                <CategoryIcon />\n                Select your Category\n              </div>\n              <div>\n                <ArrowDropDown />\n              </div>\n            </PopoverHandler>\n          }\n          className=\"category-popover\"\n          content={\n            <>\n              <CategoryDropdown\n                items={data.categories}\n                iconList={iconTypes}\n                handleCategorySelection={(slug: any) =>\n                  handleCategorySelection(slug)\n                }\n                selectedQueries={selectedQueries}\n              />\n            </>\n          }\n        />\n      )}\n      {desktop && (\n        <>\n          <PopoverWrapper>\n            <Popover\n              handler={\n                <PopoverHandler>\n                  <div>\n                    <CategoryIcon />\n                    Select your Category\n                  </div>\n                  <div>\n                    <ArrowDropDown />\n                  </div>\n                </PopoverHandler>\n              }\n              className=\"category-popover\"\n              content={\n                <>\n                  <CategoryDropdown\n                    items={data.categories}\n                    iconList={iconTypes}\n                    handleCategorySelection={(slug: any) =>\n                      handleCategorySelection(slug)\n                    }\n                    selectedQueries={selectedQueries}\n                  />\n                </>\n              }\n            />\n          </PopoverWrapper>\n\n          <SidebarWrapper>\n            <Sticky enabled={isSidebarSticky} top={110}>\n              <Scrollbars universal autoHide autoHeight autoHeightMax={688}>\n                <CategoryDropdown\n                  items={data.categories}\n                  iconList={iconTypes}\n                  handleCategorySelection={(id: any) =>\n                    handleCategorySelection(id)\n                  }\n                  selectedQueries={selectedQueries}\n                />\n              </Scrollbars>\n            </Sticky>\n          </SidebarWrapper>\n        </>\n      )}\n    </CategoryWrapper>\n  );\n};\n\nexport default SidebarCategory;\n"]},"metadata":{},"sourceType":"module"}