{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport * as Yup from 'yup';\nimport { closeModal } from '@redq/reuse-modal';\nimport { ErrorMessage, Formik, Form } from 'formik';\nimport { useMutation } from '@apollo/react-hooks';\nimport MaskedInput from 'react-text-mask';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport Button from 'components/Button/Button';\nimport { UPDATE_CONTACT } from 'graphql/mutation/contact';\nimport { FieldWrapper, Heading } from './Update.style';\nvar ContactValidationSchema = Yup.object().shape({\n  number: Yup.string().required('Number is required')\n});\n\nvar CreateOrUpdateContact = function CreateOrUpdateContact(_ref) {\n  var item = _ref.item;\n  var initialValues = {\n    id: item.id || null,\n    type: item.type || 'secondary',\n    number: item.number || ''\n  };\n\n  var _useMutation = useMutation(UPDATE_CONTACT),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      addContactMutation = _useMutation2[0];\n\n  var _useContext = useContext(ProfileContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var handleSubmit = function handleSubmit(values, _ref2) {\n    var setSubmitting;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setSubmitting = _ref2.setSubmitting;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(addContactMutation({\n              variables: {\n                contactInput: _JSON$stringify(values)\n              }\n            }));\n\n          case 3:\n            console.log(values, 'formik values');\n            dispatch({\n              type: 'ADD_OR_UPDATE_CONTACT',\n              payload: values\n            });\n            closeModal();\n            setSubmitting(false);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  return __jsx(Formik, {\n    initialValues: initialValues,\n    onSubmit: handleSubmit,\n    validationSchema: ContactValidationSchema\n  }, function (_ref3) {\n    var values = _ref3.values,\n        handleChange = _ref3.handleChange,\n        handleBlur = _ref3.handleBlur,\n        isSubmitting = _ref3.isSubmitting;\n    return __jsx(Form, null, __jsx(Heading, null, item && item.id ? 'Edit Contact' : 'Add New Contact'), __jsx(FieldWrapper, null, __jsx(MaskedInput, {\n      mask: ['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n      className: \"form-control\",\n      placeholder: \"Enter a phone number\",\n      guide: false,\n      id: \"my-input-id\",\n      value: values.number,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      name: \"number\",\n      render: function render(ref, props) {\n        return __jsx(StyledInput, _extends({\n          ref: ref\n        }, props));\n      }\n    })), __jsx(ErrorMessage, {\n      name: \"number\",\n      component: StyledError\n    }), __jsx(Button, {\n      disabled: isSubmitting,\n      type: \"submit\",\n      title: \"Save Contact\",\n      size: \"medium\",\n      fullwidth: true\n    }));\n  });\n};\n\nexport default CreateOrUpdateContact;\nvar StyledInput = styled.input.withConfig({\n  displayName: \"UpdateContact__StyledInput\",\n  componentId: \"sc-1675sf7-0\"\n})([\"width:100%;height:54px;border-radius:6px;font-family:\", \";border:1px solid \", \";color:\", \";font-size:16px;line-height:19px;font-weight:400;padding:0 18px;box-sizing:border-box;transition:border-color 0.25s ease;&:hover,&:focus{outline:0;}&:focus{border-color:\", \";}&::placeholder{color:\", \";}\"], themeGet('colors.fontFamily', 'Lato, sans-serif'), themeGet('colors.borderColor', '#e6e6e6'), themeGet('colors.darkBold', '#0D1136'), themeGet('colors.primary', '#009e7f'), themeGet('colorsdarkRegular', '#77798C'));\nvar StyledError = styled.div.withConfig({\n  displayName: \"UpdateContact__StyledError\",\n  componentId: \"sc-1675sf7-1\"\n})([\"color:red;padding-bottom:10px;margin-top:-5px;\"]);","map":null,"metadata":{},"sourceType":"module"}