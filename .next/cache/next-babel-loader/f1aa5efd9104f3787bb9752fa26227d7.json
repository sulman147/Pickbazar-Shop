{"ast":null,"code":"import Currency from 'currency.js';\nimport { getLocalState } from './localStorage';\nexport const getCartProducts = () => {\n  const products = getLocalState('cart');\n  return products ? products : [];\n};\nexport const getTotalPrice = () => {\n  const price = getLocalState('totalPrice');\n  return price ? price : 0;\n};\nexport const getCoupon = () => {\n  const coupon = getLocalState('coupon');\n  if (coupon) return coupon;\n  return {\n    id: 0,\n    code: 'DEFAULT_COUPON',\n    discountInPercent: 0\n  };\n};\nexport const getDiscount = () => {\n  const discount = getLocalState('discount');\n  return discount ? discount : 0;\n};\nexport const getSubTotalPrice = () => {\n  const price = getLocalState('subTotalPrice');\n  return price ? price : 0;\n}; // export const getCartProducts = (context: any) => {\n//   try {\n//     const products = JSON.parse(getCookie('cart', context));\n//     if (products && products.length) {\n//       return products;\n//     } else {\n//       return [];\n//     }\n//   } catch (error) {\n//     return 0;\n//   }\n// };\n// export const getTotalPrice = (context: any) => {\n//   try {\n//     const price = JSON.parse(getCookie('totalPrice', context));\n//     return price;\n//   } catch (error) {\n//     return 0;\n//   }\n// };\n// export const getSubTotalPrice = (context: any) => {\n//   try {\n//     const price = JSON.parse(getCookie('subTotalPrice', context));\n//     return price;\n//   } catch (error) {\n//     return 0;\n//   }\n// };\n// export const getDiscount = (context: any) => {\n//   try {\n//     const discount = getCookie('discount', context);\n//     return discount || 0;\n//   } catch (error) {\n//     return 0;\n//   }\n// };\n// export const getCoupon = (context: any) => {\n//   try {\n//     const coupon = JSON.parse(getCookie('coupon', context));\n//     return coupon;\n//   } catch (error) {\n//     return {\n//       id: 0,\n//       code: 'DEFAULT_COUPON',\n//       discountInPercent: 0,\n//     };\n//   }\n// };\n\nexport const findProductIndex = (cartProducts, dataId) => {\n  let index = -1;\n\n  if (cartProducts && cartProducts.length) {\n    index = cartProducts.findIndex(product => product.id === dataId);\n  }\n\n  return index;\n};\nexport const getProductQuantity = (cartProducts, index) => {\n  let quantity = 0;\n\n  if (index !== -1) {\n    quantity = cartProducts[index].quantity;\n  }\n\n  return quantity;\n};\nexport const calculateItemPrice = product => {\n  const quantity = product.quantity ? product.quantity : 1;\n  const price = product.salePrice ? product.salePrice : product.price;\n  const itemPrice = Currency(quantity).multiply(price);\n  const itemPriceValue = Number(itemPrice.value);\n  return itemPriceValue;\n};\nexport const calculateTotalPrice = products => {\n  let total = Currency(0);\n  products.forEach(product => {\n    const quantity = product.quantity ? product.quantity : 1;\n    const price = product.salePrice ? product.salePrice : product.price;\n    const itemPrice = Currency(quantity).multiply(price);\n    total = Currency(total).add(itemPrice);\n  });\n  const totalPrice = Number(total.value);\n  return totalPrice;\n};\nexport const modifyaddressData = (data, disabled = false) => {\n  let radioData = [];\n  data.forEach(item => {\n    radioData.push({\n      id: item.id,\n      title: item.name,\n      value: `${item.name}-${item.id}`,\n      label: item.info,\n      disabled\n    });\n  });\n  return radioData;\n};\nexport const modifyContactData = (data, disabled = false) => {\n  let radioData = [];\n  data.forEach(item => {\n    radioData.push({\n      id: item.id,\n      title: item.type === 'primary' ? 'Primary' : 'Secondary',\n      value: `${item.number}-${item.id}`,\n      label: item.number,\n      disabled\n    });\n  });\n  return radioData;\n};\nexport const modifyCardData = (data, disabled = false, mobileWallet = true, cashOnDelivery = true) => {\n  let cardData = [];\n  data.forEach(item => {\n    cardData.push({\n      id: item.id,\n      type: item.type,\n      cardNumber: item.lastFourDigit,\n      cardName: item.name,\n      disabled\n    });\n  });\n  const paymentOptionData = {\n    showCard: true,\n    mobileWallet: mobileWallet,\n    cashOnDelivery: cashOnDelivery,\n    addedCard: cardData\n  };\n  return paymentOptionData;\n};\nexport const cartAnimation = event => {\n  const getClosest = function (elem, selector) {\n    for (; elem && elem !== document; elem = elem.parentNode) {\n      if (elem.matches(selector)) return elem;\n    }\n\n    return null;\n  }; // start animation block\n\n\n  let imgtodrag = getClosest(event.target, '.product-card'); // console.log(imgtodrag, 'Image To Drag');\n\n  let viewcart = document.getElementsByClassName('product-cart')[0];\n  let imgtodragImage = imgtodrag.querySelector('.product-image'); // console.log(imgtodragImage, 'imgtodragImage Drag');\n\n  let disLeft = imgtodrag.getBoundingClientRect().left;\n  let disTop = imgtodrag.getBoundingClientRect().top;\n  let cartleft = viewcart.getBoundingClientRect().left;\n  let carttop = viewcart.getBoundingClientRect().top;\n  let image = imgtodragImage.cloneNode(true);\n  image.style = 'z-index: 11111; width: 100px;opacity:1; position:fixed; top:' + disTop + 'px;left:' + disLeft + 'px;transition: left 1s, top 1s, width 1s, opacity 1s cubic-bezier(1, 1, 1, 1);border-radius: 50px; overflow: hidden; box-shadow: 0 21px 36px rgba(0,0,0,0.1)';\n  var rechange = document.body.appendChild(image);\n  setTimeout(function () {\n    image.style.left = cartleft + 'px';\n    image.style.top = carttop + 'px';\n    image.style.width = '40px';\n    image.style.opacity = '0';\n  }, 200);\n  setTimeout(function () {\n    rechange.parentNode.removeChild(rechange);\n  }, 1000); // End Animation Block\n};","map":null,"metadata":{},"sourceType":"module"}