{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { openModal } from '@redq/reuse-modal';\nimport Router from 'next/router';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport Drawer from 'components/Drawer/Drawer';\nimport Button from 'components/Button/Button';\nimport NavLink from 'components/NavLink/NavLink';\nimport { CloseIcon } from 'components/AllSvgIcon';\nimport { DrawerContext } from 'contexts/drawer/drawer.context';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport AuthenticationForm from '../../SignInOutForm/Form';\nimport { FormattedMessage } from 'react-intl';\nimport { HamburgerIcon, DrawerContentWrapper, DrawerClose, DrawerProfile, LogoutView, LoginView, UserAvatar, UserDetails, DrawerMenu, DrawerMenuItem, UesrOptionMenu } from './Header.style';\nimport UserImage from 'image/user.jpg';\nimport { PROCEED_TO_CHECKOUT_PAGE, PROFILE_PAGE, YOUR_ORDER, ORDER_RECEIVED, HELP_PAGE, OFFER_PAGE } from 'constants/navigation';\nconst DrawerMenuItems = [{\n  id: 1,\n  intlLabelId: 'navLinkHome',\n  label: 'Home',\n  href: '/'\n}, {\n  id: 2,\n  intlLabelId: 'navlinkCheckout',\n  label: 'Checkout',\n  href: PROCEED_TO_CHECKOUT_PAGE\n}, {\n  id: 3,\n  intlLabelId: 'navlinkProfile',\n  label: 'Profile',\n  href: PROFILE_PAGE\n}, {\n  id: 4,\n  intlLabelId: 'sidebarYourOrder',\n  label: 'Order',\n  href: YOUR_ORDER\n}, {\n  id: 5,\n  intlLabelId: 'navlinkOrderReceived',\n  label: 'Received',\n  href: ORDER_RECEIVED\n}, {\n  id: 6,\n  intlLabelId: 'navlinkHelp',\n  label: 'Help',\n  href: HELP_PAGE\n}, {\n  id: 7,\n  intlLabelId: 'navlinkOffer',\n  label: 'Offer',\n  href: OFFER_PAGE\n}];\n\nconst MobileDrawer = () => {\n  const {\n    state,\n    dispatch\n  } = useContext(DrawerContext);\n  const {\n    authState: {\n      isAuthenticated\n    },\n    authDispatch\n  } = useContext(AuthContext); // Toggle drawer\n\n  const toggleHandler = React.useCallback(() => {\n    dispatch({\n      type: 'TOGGLE'\n    });\n  }, [dispatch]);\n\n  const handleLogout = () => {\n    if (false) {\n      localStorage.removeItem('access_token');\n      authDispatch({\n        type: 'SIGN_OUT'\n      });\n      Router.push('/');\n    }\n  };\n\n  const resetSearch = () => {\n    dispatch({\n      type: 'RESET'\n    });\n  };\n\n  const signInOutForm = () => {\n    dispatch({\n      type: 'TOGGLE'\n    });\n    authDispatch({\n      type: 'SIGNIN'\n    });\n    openModal({\n      show: true,\n      overlayClassName: 'quick-view-overlay',\n      closeOnClickOutside: true,\n      component: AuthenticationForm,\n      closeComponent: '',\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: 'quick-view-modal',\n        width: 458,\n        height: 'auto'\n      }\n    });\n  };\n\n  return __jsx(Drawer, {\n    width: \"316px\",\n    drawerHandler: __jsx(HamburgerIcon, null, __jsx(\"span\", null), __jsx(\"span\", null), __jsx(\"span\", null)),\n    open: state.isOpen,\n    toggleHandler: toggleHandler,\n    closeButton: __jsx(DrawerClose, null, __jsx(CloseIcon, null))\n  }, __jsx(Scrollbars, {\n    autoHide: true\n  }, __jsx(DrawerContentWrapper, null, __jsx(DrawerProfile, null, isAuthenticated ? __jsx(LoginView, null, __jsx(UserAvatar, null, __jsx(\"img\", {\n    src: UserImage,\n    alt: \"user_avatar\"\n  })), __jsx(UserDetails, null, __jsx(\"h3\", null, \"David Kinderson\"), __jsx(\"span\", null, \"+990 374 987\"))) : __jsx(LogoutView, null, __jsx(Button, {\n    intlButtonId: \"mobileSignInButtonText\",\n    title: \"Join In\",\n    size: \"small\",\n    className: \"sign_in\" // variant=\"primary\"\n    ,\n    onClick: signInOutForm\n  }))), __jsx(DrawerMenu, null, DrawerMenuItems.map(item => __jsx(DrawerMenuItem, {\n    key: item.id\n  }, __jsx(NavLink, {\n    onClick: toggleHandler,\n    href: item.href,\n    label: item.label,\n    intlId: item.intlLabelId,\n    className: \"drawer_menu_item\"\n  })))), isAuthenticated && __jsx(UesrOptionMenu, null, __jsx(DrawerMenuItem, null, __jsx(NavLink, {\n    href: \"/profile\",\n    label: \"Your Account Settings\",\n    className: \"drawer_menu_item\",\n    intlId: \"navlinkAccountSettings\"\n  })), __jsx(DrawerMenuItem, null, __jsx(\"div\", {\n    onClick: handleLogout,\n    className: \"drawer_menu_item\"\n  }, __jsx(\"span\", {\n    className: \"logoutBtn\"\n  }, __jsx(FormattedMessage, {\n    id: \"navlinkLogout\",\n    defaultMessage: \"Logout\"\n  }))))))));\n};\n\nexport default MobileDrawer;","map":null,"metadata":{},"sourceType":"module"}