{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext, useEffect } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport Button from 'components/Button/Button';\nimport InputIncDec from 'components/InputIncDec/InputIncDec';\nimport { ProductDetailsWrapper, ProductPreview, ProductInfo, ProductTitle, BackButton, ProductWeight, ProductDescription, ProductMeta, ProductCartWrapper, ProductPriceWrapper, ProductPrice, SalePrice, ProductCartBtn, MetaSingle, MetaItem, RelatedItems } from './ProductDetails.style';\nimport { LongArrowLeft, CartIcon } from 'components/AllSvgIcon';\nimport ReadMore from 'components/Truncate/Truncate';\nimport CarouselWithCustomDots from 'components/MultiCarousel/MultiCarousel';\nimport Products from 'containers/Products/Products';\nimport { CartContext } from 'contexts/cart/cart.context';\nimport { CURRENCY } from 'helper/constant';\nimport { findProductIndex, getProductQuantity } from 'helper/utility';\nimport { FormattedMessage } from 'react-intl';\nimport LanguageContext from 'contexts/language/language.context';\n\nconst ProductDetails = ({\n  product,\n  deviceType\n}) => {\n  const {\n    state: {\n      lang\n    }\n  } = useContext(LanguageContext);\n  const {\n    add,\n    update,\n    products\n  } = useContext(CartContext);\n  const data = product;\n  const index = findProductIndex(products, data.id);\n  const quantity = getProductQuantity(products, index);\n\n  const handleClick = e => {\n    e.stopPropagation();\n    add(e, data);\n  };\n\n  const handleUpdate = (value, e) => {\n    if (index === -1 && value === 1) {\n      add(e, data);\n    } else {\n      update(data.id, value);\n    }\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      window.scrollTo(0, 0);\n    }, 500);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(ProductDetailsWrapper, {\n    className: \"product-card\",\n    dir: \"ltr\"\n  }, lang === 'ar' || lang === 'he' ? '' : __jsx(ProductPreview, null, __jsx(BackButton, null, __jsx(Button, {\n    title: \"Back\",\n    intlButtonId: \"backBtn\",\n    iconPosition: \"left\",\n    size: \"small\",\n    style: {\n      backgroundColor: '#ffffff',\n      border: '1px solid #f1f1f1',\n      color: '#77798c'\n    },\n    icon: __jsx(LongArrowLeft, null),\n    onClick: Router.back\n  })), __jsx(CarouselWithCustomDots, {\n    items: product.gallery,\n    deviceType: deviceType\n  })), __jsx(ProductInfo, {\n    dir: lang === 'ar' || lang === 'he' ? 'rtl' : 'ltr'\n  }, __jsx(ProductTitle, null, product.title), __jsx(ProductWeight, null, product.unit), __jsx(ProductDescription, null, __jsx(ReadMore, {\n    character: 600\n  }, product.description)), __jsx(ProductCartWrapper, null, __jsx(ProductPriceWrapper, null, product.discountInPercent ? __jsx(SalePrice, null, CURRENCY, product.price) : '', __jsx(ProductPrice, null, CURRENCY, product.salePrice ? product.salePrice : product.price)), __jsx(ProductCartBtn, null, quantity <= 0 ? __jsx(Button, {\n    title: \"Add to Cart\",\n    intlButtonId: \"addToCartButton\",\n    iconPosition: \"left\",\n    size: \"small\",\n    className: \"cart-button\",\n    icon: __jsx(CartIcon, null),\n    onClick: e => handleClick(e)\n  }) : __jsx(InputIncDec, {\n    value: quantity,\n    onClick: e => {\n      e.stopPropagation(onclick);\n    },\n    onUpdate: (value, e) => handleUpdate(value, e)\n  }))), __jsx(ProductMeta, null, __jsx(MetaSingle, null, product.categories ? product.categories.map(item => __jsx(Link, {\n    href: `/${product.type}?category=${item.slug}`,\n    key: `link-${item.id}`\n  }, __jsx(\"a\", null, __jsx(MetaItem, null, item.title)))) : ''))), lang === 'ar' || lang === 'he' ? __jsx(ProductPreview, null, __jsx(BackButton, null, __jsx(Button, {\n    title: \"Back\",\n    intlButtonId: \"backBtn\",\n    iconPosition: \"left\",\n    size: \"small\",\n    style: {\n      backgroundColor: '#ffffff',\n      border: '1px solid #f1f1f1',\n      color: '#77798c'\n    },\n    icon: __jsx(LongArrowLeft, null),\n    onClick: Router.back\n  })), __jsx(CarouselWithCustomDots, {\n    items: product.gallery,\n    deviceType: deviceType\n  })) : ''), __jsx(RelatedItems, null, __jsx(\"h2\", null, __jsx(FormattedMessage, {\n    id: \"intlReletedItems\",\n    defaultMessage: \"Related Items\"\n  })), __jsx(Products, {\n    type: product.type.toLowerCase(),\n    deviceType: deviceType,\n    loadMore: false,\n    fetchLimit: 10\n  })));\n};\n\nexport default ProductDetails;","map":null,"metadata":{},"sourceType":"module"}