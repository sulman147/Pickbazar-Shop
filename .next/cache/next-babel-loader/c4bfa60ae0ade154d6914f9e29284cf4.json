{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Web Work\\\\pickbazar\\\\packages\\\\shop\\\\contexts\\\\language\\\\language.provider.js\";\nvar __jsx = React.createElement;\nimport React, { useReducer, useEffect } from 'react';\nimport LanguageContext from './language.context';\nimport languageReducer, { initialState } from './language.reducer';\nimport { IntlProvider } from 'react-intl';\nimport { StyleSheetManager } from 'styled-components';\nimport rtlPlugin from 'stylis-plugin-rtl';\nimport { InjectRTL } from 'styled/global.style';\n\nvar LanguageProvider = function LanguageProvider(_ref) {\n  var children = _ref.children,\n      messages = _ref.messages;\n\n  var _useReducer = useReducer(languageReducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var toggleLanguage = function toggleLanguage(lang) {\n    dispatch({\n      type: 'CURRENT_LANGUAGE',\n      payload: lang\n    });\n    localStorage.setItem('lang', lang);\n  };\n\n  useEffect(function () {\n    var localLang = localStorage.getItem('lang');\n\n    if (localLang) {\n      toggleLanguage(localLang);\n    } else {\n      toggleLanguage(navigator.language.split('-')[0]);\n    }\n  }, []);\n  var isRtl = state.lang === 'ar' || state.lang === 'he' ? true : false;\n  return __jsx(LanguageContext.Provider, {\n    value: {\n      state: state,\n      toggleLanguage: toggleLanguage,\n      dispatch: dispatch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(IntlProvider, {\n    locale: state.lang,\n    messages: messages[state.lang],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(InjectRTL, {\n    lang: state.lang,\n    dir: state.lang === 'ar' || state.lang === 'he' ? 'rtl' : 'ltr',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, isRtl ? __jsx(StyleSheetManager, {\n    stylisPlugins: [rtlPlugin],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, children) : children)));\n};\n\nexport default LanguageProvider;","map":{"version":3,"sources":["E:/React Web Work/pickbazar/packages/shop/contexts/language/language.provider.js"],"names":["React","useReducer","useEffect","LanguageContext","languageReducer","initialState","IntlProvider","StyleSheetManager","rtlPlugin","InjectRTL","LanguageProvider","children","messages","state","dispatch","toggleLanguage","lang","type","payload","localStorage","setItem","localLang","getItem","navigator","language","split","isRtl"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,eAAP,IAA0BC,YAA1B,QAA8C,oBAA9C;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,SAAT,QAA0B,qBAA1B;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAA4B;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,oBACzBX,UAAU,CAACG,eAAD,EAAkBC,YAAlB,CADe;AAAA,MAC5CQ,KAD4C;AAAA,MACrCC,QADqC;;AAEnD,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,IAAI,EAAI;AAC7BF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,kBAAR;AAA4BC,MAAAA,OAAO,EAAEF;AAArC,KAAD,CAAR;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BJ,IAA7B;AACD,GAHD;;AAIAd,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMmB,SAAS,GAAGF,YAAY,CAACG,OAAb,CAAqB,MAArB,CAAlB;;AACA,QAAID,SAAJ,EAAe;AACbN,MAAAA,cAAc,CAACM,SAAD,CAAd;AACD,KAFD,MAEO;AACLN,MAAAA,cAAc,CAACQ,SAAS,CAACC,QAAV,CAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CAAD,CAAd;AACD;AACF,GAPQ,EAON,EAPM,CAAT;AASA,MAAIC,KAAK,GAAGb,KAAK,CAACG,IAAN,KAAe,IAAf,IAAuBH,KAAK,CAACG,IAAN,KAAe,IAAtC,GAA6C,IAA7C,GAAoD,KAAhE;AAEA,SACE,MAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEH,MAAAA,KAAK,EAALA,KAAF;AAASE,MAAAA,cAAc,EAAdA,cAAT;AAAyBD,MAAAA,QAAQ,EAARA;AAAzB,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,MAAM,EAAED,KAAK,CAACG,IAA5B;AAAkC,IAAA,QAAQ,EAAEJ,QAAQ,CAACC,KAAK,CAACG,IAAP,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,IAAI,EAAEH,KAAK,CAACG,IADd;AAEE,IAAA,GAAG,EAAEH,KAAK,CAACG,IAAN,KAAe,IAAf,IAAuBH,KAAK,CAACG,IAAN,KAAe,IAAtC,GAA6C,KAA7C,GAAqD,KAF5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGU,KAAK,GACJ,MAAC,iBAAD;AAAmB,IAAA,aAAa,EAAE,CAAClB,SAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,QADH,CADI,GAKJA,QATJ,CADF,CADF,CADF;AAkBD,CAnCD;;AAoCA,eAAeD,gBAAf","sourcesContent":["import React, { useReducer, useEffect } from 'react';\nimport LanguageContext from './language.context';\nimport languageReducer, { initialState } from './language.reducer';\nimport { IntlProvider } from 'react-intl';\nimport { StyleSheetManager } from 'styled-components';\nimport rtlPlugin from 'stylis-plugin-rtl';\nimport { InjectRTL } from 'styled/global.style';\n\nconst LanguageProvider = ({ children, messages }) => {\n  const [state, dispatch] = useReducer(languageReducer, initialState);\n  const toggleLanguage = lang => {\n    dispatch({ type: 'CURRENT_LANGUAGE', payload: lang });\n    localStorage.setItem('lang', lang);\n  };\n  useEffect(() => {\n    const localLang = localStorage.getItem('lang');\n    if (localLang) {\n      toggleLanguage(localLang);\n    } else {\n      toggleLanguage(navigator.language.split('-')[0]);\n    }\n  }, []);\n\n  let isRtl = state.lang === 'ar' || state.lang === 'he' ? true : false;\n\n  return (\n    <LanguageContext.Provider value={{ state, toggleLanguage, dispatch }}>\n      <IntlProvider locale={state.lang} messages={messages[state.lang]}>\n        <InjectRTL\n          lang={state.lang}\n          dir={state.lang === 'ar' || state.lang === 'he' ? 'rtl' : 'ltr'}\n        >\n          {isRtl ? (\n            <StyleSheetManager stylisPlugins={[rtlPlugin]}>\n              {children}\n            </StyleSheetManager>\n          ) : (\n            children\n          )}\n        </InjectRTL>\n      </IntlProvider>\n    </LanguageContext.Provider>\n  );\n};\nexport default LanguageProvider;\n"]},"metadata":{},"sourceType":"module"}