{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport App from 'next/app';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from 'theme';\nimport { CartProvider } from 'contexts/cart/cart.provider';\nimport { AuthProvider } from 'contexts/auth/auth.provider';\nimport { StickyProvider } from 'contexts/app/app.provider';\nimport { SearchProvider } from 'contexts/search/search.provider';\nimport LanguageProvider from 'contexts/language/language.provider';\nimport AppLayout from 'containers/LayoutContainer/AppLayout';\nimport { useDeviceType } from 'helper/useDeviceType'; // Language translation files\n\nimport localEn from 'data/translation/en.json';\nimport localAr from 'data/translation/ar.json';\nimport localEs from 'data/translation/es.json';\nimport localDe from 'data/translation/de.json';\nimport localCn from 'data/translation/zh.json';\nimport localIl from 'data/translation/he.json'; // External CSS import here\n\nimport 'rc-table/assets/index.css';\nimport 'rc-collapse/assets/index.css';\nimport 'react-multi-carousel/lib/styles.css';\nimport '@redq/reuse-modal/lib/index.css';\nimport { GlobalStyle } from 'styled/global.style'; // Language translation Config\n\nvar messages = {\n  en: localEn,\n  ar: localAr,\n  es: localEs,\n  de: localDe,\n  zh: localCn,\n  he: localIl\n};\nexport default function ExtendedApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps,\n      query = _ref.query,\n      userAgent = _ref.userAgent;\n  var deviceType = useDeviceType(userAgent);\n  return __jsx(ThemeProvider, {\n    theme: theme\n  }, __jsx(LanguageProvider, {\n    messages: messages\n  }, __jsx(CartProvider, null, __jsx(SearchProvider, {\n    query: query\n  }, __jsx(StickyProvider, null, __jsx(AuthProvider, null, __jsx(React.Fragment, null, __jsx(AppLayout, {\n    deviceType: deviceType\n  }, __jsx(Component, _extends({}, pageProps, {\n    deviceType: deviceType\n  }))), __jsx(GlobalStyle, null))))))));\n}\n\nExtendedApp.getInitialProps = function _callee(appContext) {\n  var appProps, _appContext$ctx, req, query, userAgent;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(App.getInitialProps(appContext));\n\n        case 2:\n          appProps = _context.sent;\n          _appContext$ctx = appContext.ctx, req = _appContext$ctx.req, query = _appContext$ctx.query;\n          userAgent = req ? req.headers['user-agent'] : navigator.userAgent;\n          return _context.abrupt(\"return\", _objectSpread({}, appProps, {\n            userAgent: userAgent,\n            query: query\n          }));\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};","map":null,"metadata":{},"sourceType":"module"}