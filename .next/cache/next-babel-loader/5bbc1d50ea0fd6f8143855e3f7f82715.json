{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Web Work\\\\pickbazar\\\\packages\\\\shop\\\\components\\\\CategoryDropdown\\\\CategoryIcon.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nlet iconTypes = {};\n\nconst CategoryIcon = (_ref) => {\n  let {\n    name,\n    iconArray\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"name\", \"iconArray\"]);\n\n  const hasIcon = iconArray ? iconArray.hasOwnProperty(name) : iconTypes.hasOwnProperty(name);\n  let Icon = hasIcon ? iconArray[name] : \"span\";\n  return __jsx(Icon, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }));\n};\n\nexport default CategoryIcon;","map":{"version":3,"sources":["E:/React Web Work/pickbazar/packages/shop/components/CategoryDropdown/CategoryIcon.tsx"],"names":["React","iconTypes","CategoryIcon","name","iconArray","props","hasIcon","hasOwnProperty","Icon"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAOA,IAAIC,SAAS,GAAG,EAAhB;;AAEA,MAAMC,YAAiC,GAAG,UAAmC;AAAA,MAAlC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAkC;AAAA,MAAZC,KAAY;;AAC3E,QAAMC,OAAO,GAAGF,SAAS,GACrBA,SAAS,CAACG,cAAV,CAAyBJ,IAAzB,CADqB,GAErBF,SAAS,CAACM,cAAV,CAAyBJ,IAAzB,CAFJ;AAIA,MAAIK,IAAI,GAAGF,OAAO,GAAGF,SAAS,CAACD,IAAD,CAAZ,GAAqB,MAAvC;AAEA,SAAO,MAAC,IAAD,eAAUE,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CARD;;AAUA,eAAeH,YAAf","sourcesContent":["import React from \"react\";\n\ntype IconProps = {\n  name?: any;\n  iconArray?: any;\n};\n\nlet iconTypes = {};\n\nconst CategoryIcon: React.FC<IconProps> = ({ name, iconArray, ...props }) => {\n  const hasIcon = iconArray\n    ? iconArray.hasOwnProperty(name)\n    : iconTypes.hasOwnProperty(name);\n\n  let Icon = hasIcon ? iconArray[name] : \"span\";\n\n  return <Icon {...props} />;\n};\n\nexport default CategoryIcon;\n"]},"metadata":{},"sourceType":"module"}