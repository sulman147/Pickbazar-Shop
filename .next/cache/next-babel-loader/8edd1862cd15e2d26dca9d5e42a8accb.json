{"ast":null,"code":"var __jsx = React.createElement;\nimport InputSearch from './Input';\nimport React, { useEffect, useRef, useState } from 'react';\nimport SearchResults from './SearchResults';\nimport SearchWrapper, { SearchBoxWrapper, CurrentType } from './SearchBox.style';\nimport { SearchIcon } from '../AllSvgIcon';\n\nconst Search = ({\n  suggestions,\n  buttonText,\n  buttonIcon,\n  inputStyle,\n  style,\n  bordered,\n  hideType,\n  showSvg,\n  autoSuggestion,\n  placeholder,\n  className,\n  handleSearch,\n  onClick,\n  value,\n  expand,\n  minimal,\n  pathname\n}) => {\n  const {\n    0: searchValue,\n    1: setSearchValue\n  } = useState();\n  const {\n    0: toggleSuggestion,\n    1: setToggleSuggestion\n  } = useState(false);\n  const {\n    0: toggleSearch,\n    1: setToggleSearch\n  } = useState(false);\n  let searchRef = useRef(null);\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside, false);\n    return () => {\n      document.removeEventListener('click', handleClickOutside, false);\n    };\n  }, []);\n\n  const handleSearchInput = event => {\n    setSearchValue(event.target.value);\n    setToggleSuggestion(true);\n    handleSearch(event.target.value);\n  };\n\n  const ucwords = str => {\n    const newString = str.replace(/\\//g, '');\n    const humanString = newString.replace(/-/g, ' ');\n    return (humanString + '').replace(/^([a-z])|\\s+([a-z])/g, function ($1) {\n      return $1.toUpperCase();\n    });\n  };\n\n  const setSuggestion = suggestion => {\n    setSearchValue(suggestion);\n    setToggleSuggestion(false);\n  };\n\n  const handleClickOutside = event => {\n    if (searchRef.current && !searchRef.current.contains(event.target)) {\n      setToggleSuggestion(false);\n      setToggleSearch(false);\n    }\n  };\n\n  const onClearBtnClick = () => {\n    setSearchValue('');\n  };\n\n  return __jsx(SearchWrapper, {\n    className: className,\n    ref: searchRef,\n    style: style,\n    autoSuggestion: autoSuggestion,\n    hideType: hideType,\n    expand: expand\n  }, __jsx(SearchBoxWrapper, {\n    className: `${hideType ? 'hideType' : ''} ${expand === true ? toggleSearch ? 'expanded' : 'collapsed' : ''} ${minimal === true ? 'minimal' : ''}`\n  }, pathname && pathname !== '/' ? __jsx(CurrentType, null, ucwords(pathname)) : __jsx(CurrentType, null, \"Grocery\"), __jsx(InputSearch, {\n    type: \"text\",\n    value: value,\n    onChange: handleSearchInput,\n    onFocus: () => setToggleSearch(true),\n    onBlur: () => setToggleSearch(false),\n    buttonIcon: buttonIcon,\n    buttonText: buttonText,\n    placeholder: placeholder,\n    style: inputStyle,\n    bordered: bordered,\n    showSvg: showSvg,\n    onClick: () => onClick(searchValue)\n  })), autoSuggestion && toggleSuggestion ? __jsx(SearchResults, {\n    suggestions: suggestions,\n    clearSearch: onClearBtnClick,\n    setSuggestionValue: suggestion => setSuggestion(suggestion)\n  }) : null);\n};\n\nSearch.defaultProps = {\n  bordered: false,\n  autoSuggestion: false,\n  buttonText: 'Search',\n  buttonIcon: __jsx(SearchIcon, null),\n  placeholder: 'Search your products from here',\n  inputStyle: {\n    width: '100%'\n  }\n};\nexport default Search;","map":null,"metadata":{},"sourceType":"module"}