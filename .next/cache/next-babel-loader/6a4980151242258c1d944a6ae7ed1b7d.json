{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { memo } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { useMeasure, usePrevious } from 'helper/hooks';\nimport { DropdownWrapper, Dropdown, Title, Content, IconWrapper } from './CategoryDropdown.style';\nimport CategoryIcon from './CategoryIcon';\n\nvar DropdownSubItem = function DropdownSubItem(_ref) {\n  var title = _ref.title,\n      activeClass = _ref.activeClass,\n      onClick = _ref.onClick;\n  return __jsx(Title, {\n    className: activeClass,\n    onClick: onClick\n  }, title);\n};\n\nvar DropdownItem = memo(function (_ref2) {\n  var activeClass = _ref2.activeClass,\n      title = _ref2.title,\n      onClick = _ref2.onClick,\n      isOpen = _ref2.isOpen,\n      children = _ref2.children,\n      categoryIcon = _ref2.categoryIcon,\n      iconArrays = _ref2.iconArrays;\n  var previous = usePrevious(isOpen);\n\n  var _useMeasure = useMeasure(),\n      _useMeasure2 = _slicedToArray(_useMeasure, 2),\n      bind = _useMeasure2[0],\n      viewHeight = _useMeasure2[1].height;\n\n  var _useSpring = useSpring({\n    from: {\n      height: 0,\n      opacity: 0,\n      transform: 'translate3d(25px,0,0)'\n    },\n    to: {\n      height: isOpen ? viewHeight : 0,\n      opacity: isOpen ? 1 : 0,\n      transform: \"translate3d(\".concat(isOpen ? 0 : 25, \"px,0,0)\")\n    }\n  }),\n      height = _useSpring.height,\n      opacity = _useSpring.opacity,\n      transform = _useSpring.transform;\n\n  return __jsx(Dropdown, {\n    className: isOpen ? 'open' : '',\n    isOpen: isOpen\n  }, __jsx(Title, {\n    className: activeClass,\n    onClick: onClick\n  }, categoryIcon ? __jsx(IconWrapper, null, __jsx(CategoryIcon, {\n    name: categoryIcon,\n    iconArray: iconArrays\n  })) : null, __jsx(\"span\", null, title)), __jsx(Content, {\n    style: {\n      opacity: opacity,\n      height: isOpen && previous === !isOpen ? 'auto' : height\n    }\n  }, __jsx(animated.div, _extends({\n    style: {\n      transform: transform\n    }\n  }, bind), children)));\n});\n\nvar CategoryDropdown = function CategoryDropdown(_ref3) {\n  var className = _ref3.className,\n      _ref3$items = _ref3.items,\n      items = _ref3$items === void 0 ? [] : _ref3$items,\n      handleCategorySelection = _ref3.handleCategorySelection,\n      selectedQueries = _ref3.selectedQueries,\n      iconList = _ref3.iconList;\n  var addAllClasses = ['category-dropdown'];\n\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return __jsx(DropdownWrapper, {\n    className: className\n  }, items.length !== 0 && items.map(function (dropdown) {\n    return __jsx(DropdownItem, {\n      key: dropdown.slug,\n      title: dropdown.title,\n      iconArrays: iconList,\n      categoryIcon: dropdown.icon,\n      activeClass: selectedQueries && selectedQueries.includes(dropdown.slug) ? 'active' : '',\n      isOpen: selectedQueries && (selectedQueries.includes(dropdown.slug) || dropdown.children.find(function (children) {\n        return selectedQueries.includes(children.slug);\n      })),\n      onClick: function onClick() {\n        handleCategorySelection(dropdown.slug);\n      }\n    }, dropdown.children.map(function (item) {\n      return __jsx(DropdownSubItem, {\n        key: item.slug,\n        title: item.title,\n        onClick: function onClick() {\n          handleCategorySelection(item.slug);\n        },\n        activeClass: selectedQueries && selectedQueries.includes(item.slug) ? 'active' : ''\n      });\n    }));\n  }));\n};\n\nexport default CategoryDropdown;","map":null,"metadata":{},"sourceType":"module"}