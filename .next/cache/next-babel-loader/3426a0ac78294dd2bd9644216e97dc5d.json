{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { themeGet } from '@styled-system/theme-get';\nimport Carousel from 'react-multi-carousel';\nimport Image from 'components/Image/Image';\nimport 'react-multi-carousel/lib/styles.css';\nimport './MultiCarousel.style.css';\nimport styled from 'styled-components';\nconst SingleItem = styled.li.withConfig({\n  displayName: \"MultiCarousel__SingleItem\",\n  componentId: \"sc-1nzkl3p-0\"\n})([\"border:1px solid \", \";border-radius:6px;margin-right:20px;padding:0;outline:none;width:70px;height:auto;overflow:hidden;&:last-child{margin-right:0;}&.custom-dot--active{border:2px solid \", \";}\"], themeGet('colors.borderColor', '#f1f1f1'), themeGet('colors.primary', '#009E7F'));\nconst responsive = {\n  desktop: {\n    breakpoint: {\n      max: 3000,\n      min: 1024\n    },\n    items: 1\n  },\n  mobile: {\n    breakpoint: {\n      max: 464,\n      min: 0\n    },\n    items: 1\n  },\n  tablet: {\n    breakpoint: {\n      max: 1024,\n      min: 200\n    },\n    items: 1\n  }\n};\n\nconst CarouselWithCustomDots = (_ref) => {\n  let {\n    items = [],\n    deviceType: {\n      mobile,\n      tablet,\n      desktop\n    },\n    title\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"items\", \"deviceType\", \"title\"]);\n\n  const children = items.slice(0, 6).map((item, index) => __jsx(Image, {\n    url: item.url,\n    key: index,\n    alt: title,\n    style: {\n      minWidth: 'auto',\n      height: 'auto',\n      position: 'relative',\n      margin: 'auto'\n    },\n    className: \"product-image\"\n  }));\n  const images = items.map((item, index) => __jsx(Image, {\n    url: item.url,\n    key: index,\n    alt: title,\n    style: {\n      width: '100%',\n      height: '100%',\n      position: 'relative'\n    }\n  }));\n\n  const CustomDot = ({\n    index,\n    onClick,\n    active,\n    carouselState: {\n      currentSlide,\n      deviceType\n    }\n  }) => {\n    return __jsx(SingleItem, {\n      \"data-index\": index,\n      key: index,\n      onClick: () => onClick(),\n      className: `custom-dot ${active && 'custom-dot--active'}`\n    }, React.Children.toArray(images)[index]);\n  };\n\n  let deviceType = 'desktop';\n\n  if (mobile) {\n    deviceType = 'mobile';\n  }\n\n  if (tablet) {\n    deviceType = 'tablet';\n  }\n\n  return __jsx(Carousel, _extends({\n    showDots: true,\n    ssr: true,\n    infinite: true,\n    slidesToSlide: 1,\n    containerClass: \"carousel-with-custom-dots\",\n    responsive: responsive,\n    deviceType: deviceType,\n    autoPlay: false,\n    arrows: false,\n    customDot: __jsx(CustomDot, null)\n  }, rest), children);\n};\n\nexport default CarouselWithCustomDots;","map":null,"metadata":{},"sourceType":"module"}