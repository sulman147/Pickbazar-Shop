{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport gql from 'graphql-tag';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { useQuery } from '@apollo/react-hooks';\nimport { OrderBox, OrderListWrapper, OrderList, OrderDetailsWrapper, Title, ImageWrapper, ItemWrapper, ItemDetails, ItemName, ItemSize, ItemPrice, NoOrderFound } from './Order.style';\nimport OrderDetails from './SingleOrderDetails/OrderDetails';\nimport OrderCard from './OrderCard/OrderCard';\nimport OrderCardMobile from './OrderCard/orderCardMobile';\nimport useComponentSize from 'helper/useComponentSize';\nimport { FormattedMessage } from 'react-intl';\nconst progressData = ['Order Received', 'Order On The Way', 'Order Delivered'];\nconst GET_ORDERS = gql`\n  query getAllOrders($text: String, $user: Int!, $limit: Int) {\n    orders(text: $text, limit: $limit, user: $user) {\n      id\n      status\n      deliveryAddress\n      amount\n      date\n      subtotal\n      deliveryFee\n      discount\n      deliveryTime\n      products {\n        title\n        price\n        total\n        image\n        weight\n        quantity\n        id\n      }\n    }\n  }\n`;\nconst orderTableColumns = [{\n  title: __jsx(FormattedMessage, {\n    id: \"cartItems\",\n    defaultMessage: \"Items\"\n  }),\n  dataIndex: '',\n  key: 'items',\n  render: (text, record) => {\n    return __jsx(ItemWrapper, null, __jsx(ImageWrapper, null, __jsx(\"img\", {\n      src: record.image,\n      alt: record.title\n    })), __jsx(ItemDetails, null, __jsx(ItemName, null, record.title), __jsx(ItemSize, null, record.weight), __jsx(ItemPrice, null, \"$\", record.price)));\n  }\n}, {\n  title: __jsx(FormattedMessage, {\n    id: \"intlTableColTitle2\",\n    defaultMessage: \"Quantity\"\n  }),\n  dataIndex: 'quantity',\n  key: 'quantity',\n  align: 'center'\n}, {\n  title: __jsx(FormattedMessage, {\n    id: \"intlTableColTitle3\",\n    defaultMessage: \"Price\"\n  }),\n  dataIndex: '',\n  key: 'price',\n  align: 'right',\n  render: (text, record) => {\n    return __jsx(\"p\", null, \"$\", record.total);\n  }\n}];\n\nconst OrdersContent = ({\n  deviceType: {\n    mobile,\n    tablet,\n    desktop\n  }\n}) => {\n  const {\n    0: order,\n    1: setOrder\n  } = useState(null);\n  const {\n    0: active,\n    1: setActive\n  } = useState('');\n  const [targetRef, size] = useComponentSize();\n  const orderListHeight = size.height - 79;\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(GET_ORDERS, {\n    variables: {\n      limit: 7,\n      user: 1\n    }\n  });\n  useEffect(() => {\n    if (data.orders && data.orders.length !== 0) {\n      setOrder(data.orders[0]);\n      setActive(data.orders[0].id);\n    }\n  }, [data.orders]);\n\n  if (loading) {\n    return __jsx(\"div\", null, \"loading...\");\n  }\n\n  if (error) return __jsx(\"div\", null, error.message);\n\n  const handleClick = order => {\n    setOrder(order);\n    setActive(order.id);\n  };\n\n  console.log(data.orders, 'data.orders', order, 'order');\n  return __jsx(OrderBox, null, desktop && __jsx(React.Fragment, null, __jsx(OrderListWrapper, {\n    style: {\n      height: size.height\n    }\n  }, __jsx(Title, {\n    style: {\n      padding: '0 20px'\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"intlOrderPageTitle\",\n    defaultMessage: \"My Order\"\n  })), __jsx(Scrollbars, {\n    universal: true,\n    autoHide: true,\n    autoHeight: true,\n    autoHeightMin: 420,\n    autoHeightMax: isNaN(orderListHeight) ? 500 : orderListHeight\n  }, __jsx(OrderList, null, data.orders.length !== 0 ? data.orders.map(order => __jsx(OrderCard, {\n    key: order.id,\n    orderId: order.id,\n    className: order && order.id === active ? 'active' : '',\n    status: progressData[order.status - 1],\n    date: order.date,\n    deliveryTime: order.deliveryTime,\n    amount: order.amount,\n    onClick: () => {\n      handleClick(order);\n    }\n  })) : __jsx(NoOrderFound, null, __jsx(FormattedMessage, {\n    id: \"intlNoOrderFound\",\n    defaultMessage: \"No order found\"\n  }))))), __jsx(OrderDetailsWrapper, {\n    ref: targetRef\n  }, __jsx(Title, {\n    style: {\n      padding: '0 20px'\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"orderDetailsText\",\n    defaultMessage: \"Order Details\"\n  })), order && order.id && __jsx(OrderDetails, {\n    progressStatus: order.status,\n    progressData: progressData,\n    address: order.deliveryAddress,\n    subtotal: order.subtotal,\n    discount: order.discount,\n    deliveryFee: order.deliveryFee,\n    grandTotal: order.amount,\n    tableData: order.products,\n    columns: orderTableColumns\n  }))), (mobile || tablet) && __jsx(OrderList, null, __jsx(OrderCardMobile, {\n    orders: data.orders,\n    className: order && order.id === active ? 'active' : '',\n    progressData: progressData,\n    columns: orderTableColumns,\n    onClick: () => {\n      handleClick(order);\n    }\n  })));\n};\n\nexport default OrdersContent;","map":null,"metadata":{},"sourceType":"module"}