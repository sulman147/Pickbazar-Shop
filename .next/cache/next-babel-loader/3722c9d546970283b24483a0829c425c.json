{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Currency from 'currency.js';\nimport React, { useState, useReducer } from 'react';\nimport { getLocalState, setLocalState } from 'helper/localStorage';\nimport { cartAnimation } from 'helper/utility';\nimport { CartContext } from './cart.context';\nvar initialState = {\n  isOpen: false\n};\n\nfunction reducer(cartState, action) {\n  switch (action.type) {\n    case 'TOGGLE':\n      return _objectSpread({}, cartState, {\n        isOpen: !cartState.isOpen\n      });\n\n    default:\n      return cartState;\n  }\n}\n\nvar getCartProducts = function getCartProducts() {\n  var products = getLocalState('cart');\n  return products ? products : [];\n};\n\nvar getTotalPrice = function getTotalPrice() {\n  var price = getLocalState('totalPrice');\n  return price ? price : 0;\n};\n\nvar getCoupon = function getCoupon() {\n  var coupon = getLocalState('coupon');\n  if (coupon) return coupon;\n  return {\n    id: 0,\n    code: 'DEFAULT_COUPON',\n    discountInPercent: 0\n  };\n};\n\nvar getDiscount = function getDiscount() {\n  var discount = getLocalState('discount');\n  return discount ? discount : 0;\n};\n\nexport var CartProvider = function CartProvider(props) {\n  var _useReducer = useReducer(reducer, initialState),\n      cartState = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var _useState = useState(getCartProducts()),\n      products = _useState[0],\n      setProducts = _useState[1];\n\n  var _useState2 = useState(getTotalPrice()),\n      totalPrice = _useState2[0],\n      setTotalPrice = _useState2[1];\n\n  var _useState3 = useState(getTotalPrice()),\n      subtotalPrice = _useState3[0],\n      setSubTotalPrice = _useState3[1];\n\n  var _useState4 = useState(getCoupon()),\n      coupon = _useState4[0],\n      setCoupon = _useState4[1];\n\n  var _useState5 = useState(getDiscount()),\n      discount = _useState5[0],\n      setDiscount = _useState5[1];\n\n  var setPrice = function setPrice() {\n    var coupon = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getCoupon();\n    var price = calculateTotalPrice(products, coupon);\n    setLocalState('totalPrice', price);\n    setTotalPrice(price);\n  };\n\n  var calculateTotalPrice = function calculateTotalPrice(products, coupon) {\n    var total = Currency(0);\n    var finalTotal;\n    products.forEach(function (product) {\n      var quantity = product.quantity ? product.quantity : 1;\n      var price = product.salePrice ? product.salePrice : product.price;\n      var itemPrice = Currency(quantity).multiply(price);\n      total = Currency(total).add(itemPrice);\n    });\n    finalTotal = Number(total.value);\n    setLocalState('subTotalPrice', finalTotal);\n    setSubTotalPrice(finalTotal);\n\n    if (coupon.discountInPercent) {\n      var _discount = finalTotal * Number(coupon.discountInPercent) / 100;\n\n      setLocalState('discount', _discount);\n      setDiscount(_discount);\n      finalTotal = finalTotal - _discount;\n    }\n\n    return finalTotal;\n  };\n\n  var add = function add(event, item) {\n    // TODO: cookie storage\n    if (products.length) {\n      var index = products.findIndex(function (product) {\n        return product.id === item.id;\n      });\n\n      if (index !== -1) {\n        // if product already available in the cart\n        var product = products[index];\n        var quantity = product.quantity ? product.quantity : 0;\n        products[index] = _objectSpread({}, product, {}, item, {\n          quantity: quantity + 1\n        }); // just increase the quantity\n      } else {\n        // if this product is not available in the cart\n        products.push(_objectSpread({}, item, {\n          quantity: 1\n        }));\n      }\n    } else {\n      // if the cart is empty\n      products.push(_objectSpread({}, item, {\n        quantity: 1\n      }));\n    }\n\n    cartAnimation(event);\n    setLocalState('cart', products);\n    setProducts(_toConsumableArray(products)); // have to use the shallow copy [...products]\n\n    setPrice();\n  };\n\n  var addCoupon = function addCoupon(coupon) {\n    setLocalState('coupon', coupon);\n    setCoupon(coupon);\n    setPrice(coupon);\n  };\n\n  var removeCoupon = function removeCoupon() {\n    setLocalState('coupon', {\n      id: 0,\n      code: 'DEFAULT_COUPON',\n      discountInPercent: 0\n    });\n    setLocalState('discount', 0);\n    setCoupon({\n      id: 0,\n      code: 'DEFAULT_COUPON',\n      discountInPercent: 0\n    });\n    setPrice({\n      id: 0,\n      code: 'DEFAULT_COUPON',\n      discountInPercent: 0\n    });\n  };\n\n  var update = function update(itemId, quantity) {\n    var index = products.findIndex(function (product) {\n      return product.id === itemId;\n    });\n\n    if (quantity < 1 && index > -1) {\n      // delete if quantity, 0\n      products.splice(index, 1);\n    } else {\n      // update quanity\n      var product = products[index];\n      products[index] = _objectSpread({}, product, {\n        quantity: quantity\n      });\n    }\n\n    setLocalState('cart', products);\n    setProducts(_toConsumableArray(products));\n\n    if (!products.length) {\n      setLocalState('coupon', {\n        id: 0,\n        code: 'DEFAULT_COUPON',\n        discountInPercent: 0\n      });\n      setLocalState('discount', 0);\n      setDiscount(0);\n      setCoupon({\n        id: 0,\n        code: 'DEFAULT_COUPON',\n        discountInPercent: 0\n      });\n    }\n\n    setPrice();\n  };\n\n  var clearCart = function clearCart() {\n    setLocalState('cart', []);\n    setProducts([]);\n    setLocalState('discount', 0);\n    setDiscount(0);\n    setCoupon({\n      id: 0,\n      code: 'DEFAULT_COUPON',\n      discountInPercent: 0\n    });\n    setLocalState('coupon', {\n      id: 0,\n      code: 'DEFAULT_COUPON',\n      discountInPercent: 0\n    }); // setPrice();\n\n    setLocalState('totalPrice', 0);\n    setTotalPrice(0);\n    setLocalState('subTotalPrice', 0);\n    setSubTotalPrice(0);\n  };\n\n  return __jsx(CartContext.Provider, {\n    value: {\n      cartState: cartState,\n      dispatch: dispatch,\n      products: products,\n      add: add,\n      update: update,\n      totalPrice: totalPrice,\n      addCoupon: addCoupon,\n      coupon: coupon,\n      discount: discount,\n      removeCoupon: removeCoupon,\n      subtotalPrice: subtotalPrice,\n      clearCart: clearCart\n    }\n  }, props.children);\n};","map":null,"metadata":{},"sourceType":"module"}