{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport { useState, useRef, useEffect } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\nexport function usePrevious(value) {\n  var ref = useRef();\n  useEffect(function () {\n    return void (ref.current = value);\n  }, [value]);\n  return ref.current;\n}\nexport function useMeasure() {\n  var ref = useRef();\n\n  var _useState = useState({\n    left: 0,\n    top: 0,\n    width: 0,\n    height: 0\n  }),\n      bounds = _useState[0],\n      set = _useState[1];\n\n  var _useState2 = useState(function () {\n    return new ResizeObserver(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n          entry = _ref2[0];\n\n      return set(entry.contentRect);\n    });\n  }),\n      ro = _useState2[0];\n\n  useEffect(function () {\n    if (ref.current) ro.observe(ref.current);\n    return function () {\n      return ro.disconnect();\n    };\n  }, []);\n  return [{\n    ref: ref\n  }, bounds];\n}","map":null,"metadata":{},"sourceType":"module"}